// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PulsarApi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pulsar.Proto {

  /// <summary>Holder for reflection information generated from PulsarApi.proto</summary>
  public static partial class PulsarApiReflection {

    #region Descriptor
    /// <summary>File descriptor for PulsarApi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PulsarApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9QdWxzYXJBcGkucHJvdG8SDHB1bHNhci5wcm90byLAAQoGU2NoZW1hEgwK",
            "BG5hbWUYASABKAkSEwoLc2NoZW1hX2RhdGEYAyABKAwSJwoEdHlwZRgEIAEo",
            "DjIZLnB1bHNhci5wcm90by5TY2hlbWEuVHlwZRIqCgpwcm9wZXJ0aWVzGAUg",
            "AygLMhYucHVsc2FyLnByb3RvLktleVZhbHVlIj4KBFR5cGUSCAoETm9uZRAA",
            "EgoKBlN0cmluZxABEggKBEpzb24QAhIMCghQcm90b2J1ZhADEggKBEF2cm8Q",
            "BCJaCg1NZXNzYWdlSWREYXRhEhAKCGxlZGdlcklkGAEgASgEEg8KB2VudHJ5",
            "SWQYAiABKAQSEQoJcGFydGl0aW9uGAMgASgFEhMKC2JhdGNoX2luZGV4GAQg",
            "ASgFIiYKCEtleVZhbHVlEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSIq",
            "CgxLZXlMb25nVmFsdWUSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgEIlYK",
            "DkVuY3J5cHRpb25LZXlzEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDBIo",
            "CghtZXRhZGF0YRgDIAMoCzIWLnB1bHNhci5wcm90by5LZXlWYWx1ZSLJAwoP",
            "TWVzc2FnZU1ldGFkYXRhEhUKDXByb2R1Y2VyX25hbWUYASABKAkSEwoLc2Vx",
            "dWVuY2VfaWQYAiABKAQSFAoMcHVibGlzaF90aW1lGAMgASgEEioKCnByb3Bl",
            "cnRpZXMYBCADKAsyFi5wdWxzYXIucHJvdG8uS2V5VmFsdWUSFwoPcmVwbGlj",
            "YXRlZF9mcm9tGAUgASgJEhUKDXBhcnRpdGlvbl9rZXkYBiABKAkSFAoMcmVw",
            "bGljYXRlX3RvGAcgAygJEjIKC2NvbXByZXNzaW9uGAggASgOMh0ucHVsc2Fy",
            "LnByb3RvLkNvbXByZXNzaW9uVHlwZRIZChF1bmNvbXByZXNzZWRfc2l6ZRgJ",
            "IAEoDRIdChVudW1fbWVzc2FnZXNfaW5fYmF0Y2gYCyABKAUSEgoKZXZlbnRf",
            "dGltZRgMIAEoBBI1Cg9lbmNyeXB0aW9uX2tleXMYDSADKAsyHC5wdWxzYXIu",
            "cHJvdG8uRW5jcnlwdGlvbktleXMSFwoPZW5jcnlwdGlvbl9hbGdvGA4gASgJ",
            "EhgKEGVuY3J5cHRpb25fcGFyYW0YDyABKAwSFgoOc2NoZW1hX3ZlcnNpb24Y",
            "ECABKAwimwEKFVNpbmdsZU1lc3NhZ2VNZXRhZGF0YRIqCgpwcm9wZXJ0aWVz",
            "GAEgAygLMhYucHVsc2FyLnByb3RvLktleVZhbHVlEhUKDXBhcnRpdGlvbl9r",
            "ZXkYAiABKAkSFAoMcGF5bG9hZF9zaXplGAMgASgFEhUKDWNvbXBhY3RlZF9v",
            "dXQYBCABKAgSEgoKZXZlbnRfdGltZRgFIAEoBCKRAgoOQ29tbWFuZENvbm5l",
            "Y3QSFgoOY2xpZW50X3ZlcnNpb24YASABKAkSLQoLYXV0aF9tZXRob2QYAiAB",
            "KA4yGC5wdWxzYXIucHJvdG8uQXV0aE1ldGhvZBIYChBhdXRoX21ldGhvZF9u",
            "YW1lGAUgASgJEhEKCWF1dGhfZGF0YRgDIAEoDBIYChBwcm90b2NvbF92ZXJz",
            "aW9uGAQgASgFEhsKE3Byb3h5X3RvX2Jyb2tlcl91cmwYBiABKAkSGgoSb3Jp",
            "Z2luYWxfcHJpbmNpcGFsGAcgASgJEhoKEm9yaWdpbmFsX2F1dGhfZGF0YRgI",
            "IAEoCRIcChRvcmlnaW5hbF9hdXRoX21ldGhvZBgJIAEoCSJEChBDb21tYW5k",
            "Q29ubmVjdGVkEhYKDnNlcnZlcl92ZXJzaW9uGAEgASgJEhgKEHByb3RvY29s",
            "X3ZlcnNpb24YAiABKAUiogQKEENvbW1hbmRTdWJzY3JpYmUSDQoFdG9waWMY",
            "ASABKAkSFAoMc3Vic2NyaXB0aW9uGAIgASgJEjcKB3N1YlR5cGUYAyABKA4y",
            "Ji5wdWxzYXIucHJvdG8uQ29tbWFuZFN1YnNjcmliZS5TdWJUeXBlEhMKC2Nv",
            "bnN1bWVyX2lkGAQgASgEEhIKCnJlcXVlc3RfaWQYBSABKAQSFQoNY29uc3Vt",
            "ZXJfbmFtZRgGIAEoCRIWCg5wcmlvcml0eV9sZXZlbBgHIAEoBRIPCgdkdXJh",
            "YmxlGAggASgIEjUKEHN0YXJ0X21lc3NhZ2VfaWQYCSABKAsyGy5wdWxzYXIu",
            "cHJvdG8uTWVzc2FnZUlkRGF0YRIoCghtZXRhZGF0YRgKIAMoCzIWLnB1bHNh",
            "ci5wcm90by5LZXlWYWx1ZRIWCg5yZWFkX2NvbXBhY3RlZBgLIAEoCBIkCgZz",
            "Y2hlbWEYDCABKAsyFC5wdWxzYXIucHJvdG8uU2NoZW1hEkcKD2luaXRpYWxQ",
            "b3NpdGlvbhgNIAEoDjIuLnB1bHNhci5wcm90by5Db21tYW5kU3Vic2NyaWJl",
            "LkluaXRpYWxQb3NpdGlvbiIyCgdTdWJUeXBlEg0KCUV4Y2x1c2l2ZRAAEgoK",
            "BlNoYXJlZBABEgwKCEZhaWxvdmVyEAIiKwoPSW5pdGlhbFBvc2l0aW9uEgoK",
            "BkxhdGVzdBAAEgwKCEVhcmxpZXN0EAEimgEKH0NvbW1hbmRQYXJ0aXRpb25l",
            "ZFRvcGljTWV0YWRhdGESDQoFdG9waWMYASABKAkSEgoKcmVxdWVzdF9pZBgC",
            "IAEoBBIaChJvcmlnaW5hbF9wcmluY2lwYWwYAyABKAkSGgoSb3JpZ2luYWxf",
            "YXV0aF9kYXRhGAQgASgJEhwKFG9yaWdpbmFsX2F1dGhfbWV0aG9kGAUgASgJ",
            "IocCCidDb21tYW5kUGFydGl0aW9uZWRUb3BpY01ldGFkYXRhUmVzcG9uc2US",
            "EgoKcGFydGl0aW9ucxgBIAEoDRISCgpyZXF1ZXN0X2lkGAIgASgEElIKCHJl",
            "c3BvbnNlGAMgASgOMkAucHVsc2FyLnByb3RvLkNvbW1hbmRQYXJ0aXRpb25l",
            "ZFRvcGljTWV0YWRhdGFSZXNwb25zZS5Mb29rdXBUeXBlEigKBWVycm9yGAQg",
            "ASgOMhkucHVsc2FyLnByb3RvLlNlcnZlckVycm9yEg8KB21lc3NhZ2UYBSAB",
            "KAkiJQoKTG9va3VwVHlwZRILCgdTdWNjZXNzEAASCgoGRmFpbGVkEAEipAEK",
            "EkNvbW1hbmRMb29rdXBUb3BpYxINCgV0b3BpYxgBIAEoCRISCgpyZXF1ZXN0",
            "X2lkGAIgASgEEhUKDWF1dGhvcml0YXRpdmUYAyABKAgSGgoSb3JpZ2luYWxf",
            "cHJpbmNpcGFsGAQgASgJEhoKEm9yaWdpbmFsX2F1dGhfZGF0YRgFIAEoCRIc",
            "ChRvcmlnaW5hbF9hdXRoX21ldGhvZBgGIAEoCSLYAgoaQ29tbWFuZExvb2t1",
            "cFRvcGljUmVzcG9uc2USGAoQYnJva2VyU2VydmljZVVybBgBIAEoCRIbChNi",
            "cm9rZXJTZXJ2aWNlVXJsVGxzGAIgASgJEkUKCHJlc3BvbnNlGAMgASgOMjMu",
            "cHVsc2FyLnByb3RvLkNvbW1hbmRMb29rdXBUb3BpY1Jlc3BvbnNlLkxvb2t1",
            "cFR5cGUSEgoKcmVxdWVzdF9pZBgEIAEoBBIVCg1hdXRob3JpdGF0aXZlGAUg",
            "ASgIEigKBWVycm9yGAYgASgOMhkucHVsc2FyLnByb3RvLlNlcnZlckVycm9y",
            "Eg8KB21lc3NhZ2UYByABKAkSIQoZcHJveHlfdGhyb3VnaF9zZXJ2aWNlX3Vy",
            "bBgIIAEoCCIzCgpMb29rdXBUeXBlEgwKCFJlZGlyZWN0EAASCwoHQ29ubmVj",
            "dBABEgoKBkZhaWxlZBACIsMBCg9Db21tYW5kUHJvZHVjZXISDQoFdG9waWMY",
            "ASABKAkSEwoLcHJvZHVjZXJfaWQYAiABKAQSEgoKcmVxdWVzdF9pZBgDIAEo",
            "BBIVCg1wcm9kdWNlcl9uYW1lGAQgASgJEhEKCWVuY3J5cHRlZBgFIAEoCBIo",
            "CghtZXRhZGF0YRgGIAMoCzIWLnB1bHNhci5wcm90by5LZXlWYWx1ZRIkCgZz",
            "Y2hlbWEYByABKAsyFC5wdWxzYXIucHJvdG8uU2NoZW1hIk0KC0NvbW1hbmRT",
            "ZW5kEhMKC3Byb2R1Y2VyX2lkGAEgASgEEhMKC3NlcXVlbmNlX2lkGAIgASgE",
            "EhQKDG51bV9tZXNzYWdlcxgDIAEoBSJvChJDb21tYW5kU2VuZFJlY2VpcHQS",
            "EwoLcHJvZHVjZXJfaWQYASABKAQSEwoLc2VxdWVuY2VfaWQYAiABKAQSLwoK",
            "bWVzc2FnZV9pZBgDIAEoCzIbLnB1bHNhci5wcm90by5NZXNzYWdlSWREYXRh",
            "IncKEENvbW1hbmRTZW5kRXJyb3ISEwoLcHJvZHVjZXJfaWQYASABKAQSEwoL",
            "c2VxdWVuY2VfaWQYAiABKAQSKAoFZXJyb3IYAyABKA4yGS5wdWxzYXIucHJv",
            "dG8uU2VydmVyRXJyb3ISDwoHbWVzc2FnZRgEIAEoCSJWCg5Db21tYW5kTWVz",
            "c2FnZRITCgtjb25zdW1lcl9pZBgBIAEoBBIvCgptZXNzYWdlX2lkGAIgASgL",
            "MhsucHVsc2FyLnByb3RvLk1lc3NhZ2VJZERhdGEitwMKCkNvbW1hbmRBY2sS",
            "EwoLY29uc3VtZXJfaWQYASABKAQSMgoIYWNrX3R5cGUYAiABKA4yIC5wdWxz",
            "YXIucHJvdG8uQ29tbWFuZEFjay5BY2tUeXBlEi8KCm1lc3NhZ2VfaWQYAyAD",
            "KAsyGy5wdWxzYXIucHJvdG8uTWVzc2FnZUlkRGF0YRJCChB2YWxpZGF0aW9u",
            "X2Vycm9yGAQgASgOMigucHVsc2FyLnByb3RvLkNvbW1hbmRBY2suVmFsaWRh",
            "dGlvbkVycm9yEi4KCnByb3BlcnRpZXMYBSADKAsyGi5wdWxzYXIucHJvdG8u",
            "S2V5TG9uZ1ZhbHVlIikKB0Fja1R5cGUSDgoKSW5kaXZpZHVhbBAAEg4KCkN1",
            "bXVsYXRpdmUQASKPAQoPVmFsaWRhdGlvbkVycm9yEh4KGlVuY29tcHJlc3Nl",
            "ZFNpemVDb3JydXB0aW9uEAASFgoSRGVjb21wcmVzc2lvbkVycm9yEAESFAoQ",
            "Q2hlY2tzdW1NaXNtYXRjaBACEhkKFUJhdGNoRGVTZXJpYWxpemVFcnJvchAD",
            "EhMKD0RlY3J5cHRpb25FcnJvchAEIkUKG0NvbW1hbmRBY3RpdmVDb25zdW1l",
            "ckNoYW5nZRITCgtjb25zdW1lcl9pZBgBIAEoBBIRCglpc19hY3RpdmUYAiAB",
            "KAgiOgoLQ29tbWFuZEZsb3cSEwoLY29uc3VtZXJfaWQYASABKAQSFgoObWVz",
            "c2FnZVBlcm1pdHMYAiABKA0iPQoSQ29tbWFuZFVuc3Vic2NyaWJlEhMKC2Nv",
            "bnN1bWVyX2lkGAEgASgEEhIKCnJlcXVlc3RfaWQYAiABKAQiZwoLQ29tbWFu",
            "ZFNlZWsSEwoLY29uc3VtZXJfaWQYASABKAQSEgoKcmVxdWVzdF9pZBgCIAEo",
            "BBIvCgptZXNzYWdlX2lkGAMgASgLMhsucHVsc2FyLnByb3RvLk1lc3NhZ2VJ",
            "ZERhdGEiLwoYQ29tbWFuZFJlYWNoZWRFbmRPZlRvcGljEhMKC2NvbnN1bWVy",
            "X2lkGAEgASgEIj8KFENvbW1hbmRDbG9zZVByb2R1Y2VyEhMKC3Byb2R1Y2Vy",
            "X2lkGAEgASgEEhIKCnJlcXVlc3RfaWQYAiABKAQiPwoUQ29tbWFuZENsb3Nl",
            "Q29uc3VtZXISEwoLY29uc3VtZXJfaWQYASABKAQSEgoKcmVxdWVzdF9pZBgC",
            "IAEoBCJvCiZDb21tYW5kUmVkZWxpdmVyVW5hY2tub3dsZWRnZWRNZXNzYWdl",
            "cxITCgtjb25zdW1lcl9pZBgBIAEoBBIwCgttZXNzYWdlX2lkcxgCIAMoCzIb",
            "LnB1bHNhci5wcm90by5NZXNzYWdlSWREYXRhIkoKDkNvbW1hbmRTdWNjZXNz",
            "EhIKCnJlcXVlc3RfaWQYASABKAQSJAoGc2NoZW1hGAIgASgLMhQucHVsc2Fy",
            "LnByb3RvLlNjaGVtYSJ1ChZDb21tYW5kUHJvZHVjZXJTdWNjZXNzEhIKCnJl",
            "cXVlc3RfaWQYASABKAQSFQoNcHJvZHVjZXJfbmFtZRgCIAEoCRIYChBsYXN0",
            "X3NlcXVlbmNlX2lkGAMgASgDEhYKDnNjaGVtYV92ZXJzaW9uGAQgASgMIl0K",
            "DENvbW1hbmRFcnJvchISCgpyZXF1ZXN0X2lkGAEgASgEEigKBWVycm9yGAIg",
            "ASgOMhkucHVsc2FyLnByb3RvLlNlcnZlckVycm9yEg8KB21lc3NhZ2UYAyAB",
            "KAkiDQoLQ29tbWFuZFBpbmciDQoLQ29tbWFuZFBvbmciPwoUQ29tbWFuZENv",
            "bnN1bWVyU3RhdHMSEgoKcmVxdWVzdF9pZBgBIAEoBBITCgtjb25zdW1lcl9p",
            "ZBgEIAEoBCKSAwocQ29tbWFuZENvbnN1bWVyU3RhdHNSZXNwb25zZRISCgpy",
            "ZXF1ZXN0X2lkGAEgASgEEi0KCmVycm9yX2NvZGUYAiABKA4yGS5wdWxzYXIu",
            "cHJvdG8uU2VydmVyRXJyb3ISFQoNZXJyb3JfbWVzc2FnZRgDIAEoCRISCgpt",
            "c2dSYXRlT3V0GAQgASgBEhgKEG1zZ1Rocm91Z2hwdXRPdXQYBSABKAESGAoQ",
            "bXNnUmF0ZVJlZGVsaXZlchgGIAEoARIUCgxjb25zdW1lck5hbWUYByABKAkS",
            "GAoQYXZhaWxhYmxlUGVybWl0cxgIIAEoBBIXCg91bmFja2VkTWVzc2FnZXMY",
            "CSABKAQSJAocYmxvY2tlZENvbnN1bWVyT25VbmFja2VkTXNncxgKIAEoCBIP",
            "CgdhZGRyZXNzGAsgASgJEhYKDmNvbm5lY3RlZFNpbmNlGAwgASgJEgwKBHR5",
            "cGUYDSABKAkSFgoObXNnUmF0ZUV4cGlyZWQYDiABKAESEgoKbXNnQmFja2xv",
            "ZxgPIAEoBCJCChdDb21tYW5kR2V0TGFzdE1lc3NhZ2VJZBITCgtjb25zdW1l",
            "cl9pZBgBIAEoBBISCgpyZXF1ZXN0X2lkGAIgASgEImsKH0NvbW1hbmRHZXRM",
            "YXN0TWVzc2FnZUlkUmVzcG9uc2USNAoPbGFzdF9tZXNzYWdlX2lkGAEgASgL",
            "MhsucHVsc2FyLnByb3RvLk1lc3NhZ2VJZERhdGESEgoKcmVxdWVzdF9pZBgC",
            "IAEoBCJEChtDb21tYW5kR2V0VG9waWNzT2ZOYW1lc3BhY2USEgoKcmVxdWVz",
            "dF9pZBgBIAEoBBIRCgluYW1lc3BhY2UYAiABKAkiSQojQ29tbWFuZEdldFRv",
            "cGljc09mTmFtZXNwYWNlUmVzcG9uc2USEgoKcmVxdWVzdF9pZBgBIAEoBBIO",
            "CgZ0b3BpY3MYAiADKAkiTQoQQ29tbWFuZEdldFNjaGVtYRISCgpyZXF1ZXN0",
            "X2lkGAEgASgEEg0KBXRvcGljGAIgASgJEhYKDnNjaGVtYV92ZXJzaW9uGAMg",
            "ASgMIrIBChhDb21tYW5kR2V0U2NoZW1hUmVzcG9uc2USEgoKcmVxdWVzdF9p",
            "ZBgBIAEoBBItCgplcnJvcl9jb2RlGAIgASgOMhkucHVsc2FyLnByb3RvLlNl",
            "cnZlckVycm9yEhUKDWVycm9yX21lc3NhZ2UYAyABKAkSJAoGc2NoZW1hGAQg",
            "ASgLMhQucHVsc2FyLnByb3RvLlNjaGVtYRIWCg5zY2hlbWFfdmVyc2lvbhgF",
            "IAEoDCLIFQoLQmFzZUNvbW1hbmQSLAoEdHlwZRgBIAEoDjIeLnB1bHNhci5w",
            "cm90by5CYXNlQ29tbWFuZC5UeXBlEi0KB2Nvbm5lY3QYAiABKAsyHC5wdWxz",
            "YXIucHJvdG8uQ29tbWFuZENvbm5lY3QSMQoJY29ubmVjdGVkGAMgASgLMh4u",
            "cHVsc2FyLnByb3RvLkNvbW1hbmRDb25uZWN0ZWQSMQoJc3Vic2NyaWJlGAQg",
            "ASgLMh4ucHVsc2FyLnByb3RvLkNvbW1hbmRTdWJzY3JpYmUSLwoIcHJvZHVj",
            "ZXIYBSABKAsyHS5wdWxzYXIucHJvdG8uQ29tbWFuZFByb2R1Y2VyEicKBHNl",
            "bmQYBiABKAsyGS5wdWxzYXIucHJvdG8uQ29tbWFuZFNlbmQSNgoMc2VuZF9y",
            "ZWNlaXB0GAcgASgLMiAucHVsc2FyLnByb3RvLkNvbW1hbmRTZW5kUmVjZWlw",
            "dBIyCgpzZW5kX2Vycm9yGAggASgLMh4ucHVsc2FyLnByb3RvLkNvbW1hbmRT",
            "ZW5kRXJyb3ISLQoHbWVzc2FnZRgJIAEoCzIcLnB1bHNhci5wcm90by5Db21t",
            "YW5kTWVzc2FnZRIlCgNhY2sYCiABKAsyGC5wdWxzYXIucHJvdG8uQ29tbWFu",
            "ZEFjaxInCgRmbG93GAsgASgLMhkucHVsc2FyLnByb3RvLkNvbW1hbmRGbG93",
            "EjUKC3Vuc3Vic2NyaWJlGAwgASgLMiAucHVsc2FyLnByb3RvLkNvbW1hbmRV",
            "bnN1YnNjcmliZRItCgdzdWNjZXNzGA0gASgLMhwucHVsc2FyLnByb3RvLkNv",
            "bW1hbmRTdWNjZXNzEikKBWVycm9yGA4gASgLMhoucHVsc2FyLnByb3RvLkNv",
            "bW1hbmRFcnJvchI6Cg5jbG9zZV9wcm9kdWNlchgPIAEoCzIiLnB1bHNhci5w",
            "cm90by5Db21tYW5kQ2xvc2VQcm9kdWNlchI6Cg5jbG9zZV9jb25zdW1lchgQ",
            "IAEoCzIiLnB1bHNhci5wcm90by5Db21tYW5kQ2xvc2VDb25zdW1lchI+ChBw",
            "cm9kdWNlcl9zdWNjZXNzGBEgASgLMiQucHVsc2FyLnByb3RvLkNvbW1hbmRQ",
            "cm9kdWNlclN1Y2Nlc3MSJwoEcGluZxgSIAEoCzIZLnB1bHNhci5wcm90by5D",
            "b21tYW5kUGluZxInCgRwb25nGBMgASgLMhkucHVsc2FyLnByb3RvLkNvbW1h",
            "bmRQb25nEl0KH3JlZGVsaXZlclVuYWNrbm93bGVkZ2VkTWVzc2FnZXMYFCAB",
            "KAsyNC5wdWxzYXIucHJvdG8uQ29tbWFuZFJlZGVsaXZlclVuYWNrbm93bGVk",
            "Z2VkTWVzc2FnZXMSSAoRcGFydGl0aW9uTWV0YWRhdGEYFSABKAsyLS5wdWxz",
            "YXIucHJvdG8uQ29tbWFuZFBhcnRpdGlvbmVkVG9waWNNZXRhZGF0YRJYChlw",
            "YXJ0aXRpb25NZXRhZGF0YVJlc3BvbnNlGBYgASgLMjUucHVsc2FyLnByb3Rv",
            "LkNvbW1hbmRQYXJ0aXRpb25lZFRvcGljTWV0YWRhdGFSZXNwb25zZRI1Cgts",
            "b29rdXBUb3BpYxgXIAEoCzIgLnB1bHNhci5wcm90by5Db21tYW5kTG9va3Vw",
            "VG9waWMSRQoTbG9va3VwVG9waWNSZXNwb25zZRgYIAEoCzIoLnB1bHNhci5w",
            "cm90by5Db21tYW5kTG9va3VwVG9waWNSZXNwb25zZRI5Cg1jb25zdW1lclN0",
            "YXRzGBkgASgLMiIucHVsc2FyLnByb3RvLkNvbW1hbmRDb25zdW1lclN0YXRz",
            "EkkKFWNvbnN1bWVyU3RhdHNSZXNwb25zZRgaIAEoCzIqLnB1bHNhci5wcm90",
            "by5Db21tYW5kQ29uc3VtZXJTdGF0c1Jlc3BvbnNlEkEKEXJlYWNoZWRFbmRP",
            "ZlRvcGljGBsgASgLMiYucHVsc2FyLnByb3RvLkNvbW1hbmRSZWFjaGVkRW5k",
            "T2ZUb3BpYxInCgRzZWVrGBwgASgLMhkucHVsc2FyLnByb3RvLkNvbW1hbmRT",
            "ZWVrEj8KEGdldExhc3RNZXNzYWdlSWQYHSABKAsyJS5wdWxzYXIucHJvdG8u",
            "Q29tbWFuZEdldExhc3RNZXNzYWdlSWQSTwoYZ2V0TGFzdE1lc3NhZ2VJZFJl",
            "c3BvbnNlGB4gASgLMi0ucHVsc2FyLnByb3RvLkNvbW1hbmRHZXRMYXN0TWVz",
            "c2FnZUlkUmVzcG9uc2USSQoWYWN0aXZlX2NvbnN1bWVyX2NoYW5nZRgfIAEo",
            "CzIpLnB1bHNhci5wcm90by5Db21tYW5kQWN0aXZlQ29uc3VtZXJDaGFuZ2US",
            "RwoUZ2V0VG9waWNzT2ZOYW1lc3BhY2UYICABKAsyKS5wdWxzYXIucHJvdG8u",
            "Q29tbWFuZEdldFRvcGljc09mTmFtZXNwYWNlElcKHGdldFRvcGljc09mTmFt",
            "ZXNwYWNlUmVzcG9uc2UYISABKAsyMS5wdWxzYXIucHJvdG8uQ29tbWFuZEdl",
            "dFRvcGljc09mTmFtZXNwYWNlUmVzcG9uc2USMQoJZ2V0U2NoZW1hGCIgASgL",
            "Mh4ucHVsc2FyLnByb3RvLkNvbW1hbmRHZXRTY2hlbWESQQoRZ2V0U2NoZW1h",
            "UmVzcG9uc2UYIyABKAsyJi5wdWxzYXIucHJvdG8uQ29tbWFuZEdldFNjaGVt",
            "YVJlc3BvbnNlIq0FCgRUeXBlEggKBE5vbmUQABILCgdDT05ORUNUEAISDQoJ",
            "Q09OTkVDVEVEEAMSDQoJU1VCU0NSSUJFEAQSDAoIUFJPRFVDRVIQBRIICgRT",
            "RU5EEAYSEAoMU0VORF9SRUNFSVBUEAcSDgoKU0VORF9FUlJPUhAIEgsKB01F",
            "U1NBR0UQCRIHCgNBQ0sQChIICgRGTE9XEAsSDwoLVU5TVUJTQ1JJQkUQDBIL",
            "CgdTVUNDRVNTEA0SCQoFRVJST1IQDhISCg5DTE9TRV9QUk9EVUNFUhAPEhIK",
            "DkNMT1NFX0NPTlNVTUVSEBASFAoQUFJPRFVDRVJfU1VDQ0VTUxAREggKBFBJ",
            "TkcQEhIICgRQT05HEBMSJQohUkVERUxJVkVSX1VOQUNLTk9XTEVER0VEX01F",
            "U1NBR0VTEBQSGAoUUEFSVElUSU9ORURfTUVUQURBVEEQFRIhCh1QQVJUSVRJ",
            "T05FRF9NRVRBREFUQV9SRVNQT05TRRAWEgoKBkxPT0tVUBAXEhMKD0xPT0tV",
            "UF9SRVNQT05TRRAYEhIKDkNPTlNVTUVSX1NUQVRTEBkSGwoXQ09OU1VNRVJf",
            "U1RBVFNfUkVTUE9OU0UQGhIYChRSRUFDSEVEX0VORF9PRl9UT1BJQxAbEggK",
            "BFNFRUsQHBIXChNHRVRfTEFTVF9NRVNTQUdFX0lEEB0SIAocR0VUX0xBU1Rf",
            "TUVTU0FHRV9JRF9SRVNQT05TRRAeEhoKFkFDVElWRV9DT05TVU1FUl9DSEFO",
            "R0UQHxIbChdHRVRfVE9QSUNTX09GX05BTUVTUEFDRRAgEiQKIEdFVF9UT1BJ",
            "Q1NfT0ZfTkFNRVNQQUNFX1JFU1BPTlNFECESDgoKR0VUX1NDSEVNQRAiEhcK",
            "E0dFVF9TQ0hFTUFfUkVTUE9OU0UQIyouCg9Db21wcmVzc2lvblR5cGUSCAoE",
            "Tk9ORRAAEgcKA0xaNBABEggKBFpMSUIQAiq8AwoLU2VydmVyRXJyb3ISEAoM",
            "VW5rbm93bkVycm9yEAASEQoNTWV0YWRhdGFFcnJvchABEhQKEFBlcnNpc3Rl",
            "bmNlRXJyb3IQAhIXChNBdXRoZW50aWNhdGlvbkVycm9yEAMSFgoSQXV0aG9y",
            "aXphdGlvbkVycm9yEAQSEAoMQ29uc3VtZXJCdXN5EAUSEwoPU2VydmljZU5v",
            "dFJlYWR5EAYSJQohUHJvZHVjZXJCbG9ja2VkUXVvdGFFeGNlZWRlZEVycm9y",
            "EAcSKQolUHJvZHVjZXJCbG9ja2VkUXVvdGFFeGNlZWRlZEV4Y2VwdGlvbhAI",
            "EhEKDUNoZWNrc3VtRXJyb3IQCRIbChdVbnN1cHBvcnRlZFZlcnNpb25FcnJv",
            "chAKEhEKDVRvcGljTm90Rm91bmQQCxIYChRTdWJzY3JpcHRpb25Ob3RGb3Vu",
            "ZBAMEhQKEENvbnN1bWVyTm90Rm91bmQQDRITCg9Ub29NYW55UmVxdWVzdHMQ",
            "DhIYChRUb3BpY1Rlcm1pbmF0ZWRFcnJvchAPEhAKDFByb2R1Y2VyQnVzeRAQ",
            "EhQKEEludmFsaWRUb3BpY05hbWUQESpLCgpBdXRoTWV0aG9kEhIKDkF1dGhN",
            "ZXRob2ROb25lEAASEwoPQXV0aE1ldGhvZFljYVYxEAESFAoQQXV0aE1ldGhv",
            "ZEF0aGVucxACKoUBCg9Qcm90b2NvbFZlcnNpb24SBgoCdjAQABIGCgJ2MRAB",
            "EgYKAnYyEAISBgoCdjMQAxIGCgJ2NBAEEgYKAnY1EAUSBgoCdjYQBhIGCgJ2",
            "NxAHEgYKAnY4EAgSBgoCdjkQCRIHCgN2MTAQChIHCgN2MTEQCxIHCgN2MTIQ",
            "DBIHCgN2MTMQDUImCiJvcmcuYXBhY2hlLnB1bHNhci5jb21tb24uYXBpLnBy",
            "b3RvSANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Pulsar.Proto.CompressionType), typeof(global::Pulsar.Proto.ServerError), typeof(global::Pulsar.Proto.AuthMethod), typeof(global::Pulsar.Proto.ProtocolVersion), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.Schema), global::Pulsar.Proto.Schema.Parser, new[]{ "Name", "SchemaData", "Type", "Properties" }, null, new[]{ typeof(global::Pulsar.Proto.Schema.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.MessageIdData), global::Pulsar.Proto.MessageIdData.Parser, new[]{ "LedgerId", "EntryId", "Partition", "BatchIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.KeyValue), global::Pulsar.Proto.KeyValue.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.KeyLongValue), global::Pulsar.Proto.KeyLongValue.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.EncryptionKeys), global::Pulsar.Proto.EncryptionKeys.Parser, new[]{ "Key", "Value", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.MessageMetadata), global::Pulsar.Proto.MessageMetadata.Parser, new[]{ "ProducerName", "SequenceId", "PublishTime", "Properties", "ReplicatedFrom", "PartitionKey", "ReplicateTo", "Compression", "UncompressedSize", "NumMessagesInBatch", "EventTime", "EncryptionKeys", "EncryptionAlgo", "EncryptionParam", "SchemaVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.SingleMessageMetadata), global::Pulsar.Proto.SingleMessageMetadata.Parser, new[]{ "Properties", "PartitionKey", "PayloadSize", "CompactedOut", "EventTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandConnect), global::Pulsar.Proto.CommandConnect.Parser, new[]{ "ClientVersion", "AuthMethod", "AuthMethodName", "AuthData", "ProtocolVersion", "ProxyToBrokerUrl", "OriginalPrincipal", "OriginalAuthData", "OriginalAuthMethod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandConnected), global::Pulsar.Proto.CommandConnected.Parser, new[]{ "ServerVersion", "ProtocolVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandSubscribe), global::Pulsar.Proto.CommandSubscribe.Parser, new[]{ "Topic", "Subscription", "SubType", "ConsumerId", "RequestId", "ConsumerName", "PriorityLevel", "Durable", "StartMessageId", "Metadata", "ReadCompacted", "Schema", "InitialPosition" }, null, new[]{ typeof(global::Pulsar.Proto.CommandSubscribe.Types.SubType), typeof(global::Pulsar.Proto.CommandSubscribe.Types.InitialPosition) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandPartitionedTopicMetadata), global::Pulsar.Proto.CommandPartitionedTopicMetadata.Parser, new[]{ "Topic", "RequestId", "OriginalPrincipal", "OriginalAuthData", "OriginalAuthMethod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse), global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse.Parser, new[]{ "Partitions", "RequestId", "Response", "Error", "Message" }, null, new[]{ typeof(global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse.Types.LookupType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandLookupTopic), global::Pulsar.Proto.CommandLookupTopic.Parser, new[]{ "Topic", "RequestId", "Authoritative", "OriginalPrincipal", "OriginalAuthData", "OriginalAuthMethod" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandLookupTopicResponse), global::Pulsar.Proto.CommandLookupTopicResponse.Parser, new[]{ "BrokerServiceUrl", "BrokerServiceUrlTls", "Response", "RequestId", "Authoritative", "Error", "Message", "ProxyThroughServiceUrl" }, null, new[]{ typeof(global::Pulsar.Proto.CommandLookupTopicResponse.Types.LookupType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandProducer), global::Pulsar.Proto.CommandProducer.Parser, new[]{ "Topic", "ProducerId", "RequestId", "ProducerName", "Encrypted", "Metadata", "Schema" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandSend), global::Pulsar.Proto.CommandSend.Parser, new[]{ "ProducerId", "SequenceId", "NumMessages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandSendReceipt), global::Pulsar.Proto.CommandSendReceipt.Parser, new[]{ "ProducerId", "SequenceId", "MessageId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandSendError), global::Pulsar.Proto.CommandSendError.Parser, new[]{ "ProducerId", "SequenceId", "Error", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandMessage), global::Pulsar.Proto.CommandMessage.Parser, new[]{ "ConsumerId", "MessageId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandAck), global::Pulsar.Proto.CommandAck.Parser, new[]{ "ConsumerId", "AckType", "MessageId", "ValidationError", "Properties" }, null, new[]{ typeof(global::Pulsar.Proto.CommandAck.Types.AckType), typeof(global::Pulsar.Proto.CommandAck.Types.ValidationError) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandActiveConsumerChange), global::Pulsar.Proto.CommandActiveConsumerChange.Parser, new[]{ "ConsumerId", "IsActive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandFlow), global::Pulsar.Proto.CommandFlow.Parser, new[]{ "ConsumerId", "MessagePermits" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandUnsubscribe), global::Pulsar.Proto.CommandUnsubscribe.Parser, new[]{ "ConsumerId", "RequestId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandSeek), global::Pulsar.Proto.CommandSeek.Parser, new[]{ "ConsumerId", "RequestId", "MessageId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandReachedEndOfTopic), global::Pulsar.Proto.CommandReachedEndOfTopic.Parser, new[]{ "ConsumerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandCloseProducer), global::Pulsar.Proto.CommandCloseProducer.Parser, new[]{ "ProducerId", "RequestId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandCloseConsumer), global::Pulsar.Proto.CommandCloseConsumer.Parser, new[]{ "ConsumerId", "RequestId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandRedeliverUnacknowledgedMessages), global::Pulsar.Proto.CommandRedeliverUnacknowledgedMessages.Parser, new[]{ "ConsumerId", "MessageIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandSuccess), global::Pulsar.Proto.CommandSuccess.Parser, new[]{ "RequestId", "Schema" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandProducerSuccess), global::Pulsar.Proto.CommandProducerSuccess.Parser, new[]{ "RequestId", "ProducerName", "LastSequenceId", "SchemaVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandError), global::Pulsar.Proto.CommandError.Parser, new[]{ "RequestId", "Error", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandPing), global::Pulsar.Proto.CommandPing.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandPong), global::Pulsar.Proto.CommandPong.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandConsumerStats), global::Pulsar.Proto.CommandConsumerStats.Parser, new[]{ "RequestId", "ConsumerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandConsumerStatsResponse), global::Pulsar.Proto.CommandConsumerStatsResponse.Parser, new[]{ "RequestId", "ErrorCode", "ErrorMessage", "MsgRateOut", "MsgThroughputOut", "MsgRateRedeliver", "ConsumerName", "AvailablePermits", "UnackedMessages", "BlockedConsumerOnUnackedMsgs", "Address", "ConnectedSince", "Type", "MsgRateExpired", "MsgBacklog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandGetLastMessageId), global::Pulsar.Proto.CommandGetLastMessageId.Parser, new[]{ "ConsumerId", "RequestId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandGetLastMessageIdResponse), global::Pulsar.Proto.CommandGetLastMessageIdResponse.Parser, new[]{ "LastMessageId", "RequestId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandGetTopicsOfNamespace), global::Pulsar.Proto.CommandGetTopicsOfNamespace.Parser, new[]{ "RequestId", "Namespace" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandGetTopicsOfNamespaceResponse), global::Pulsar.Proto.CommandGetTopicsOfNamespaceResponse.Parser, new[]{ "RequestId", "Topics" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandGetSchema), global::Pulsar.Proto.CommandGetSchema.Parser, new[]{ "RequestId", "Topic", "SchemaVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.CommandGetSchemaResponse), global::Pulsar.Proto.CommandGetSchemaResponse.Parser, new[]{ "RequestId", "ErrorCode", "ErrorMessage", "Schema", "SchemaVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pulsar.Proto.BaseCommand), global::Pulsar.Proto.BaseCommand.Parser, new[]{ "Type", "Connect", "Connected", "Subscribe", "Producer", "Send", "SendReceipt", "SendError", "Message", "Ack", "Flow", "Unsubscribe", "Success", "Error", "CloseProducer", "CloseConsumer", "ProducerSuccess", "Ping", "Pong", "RedeliverUnacknowledgedMessages", "PartitionMetadata", "PartitionMetadataResponse", "LookupTopic", "LookupTopicResponse", "ConsumerStats", "ConsumerStatsResponse", "ReachedEndOfTopic", "Seek", "GetLastMessageId", "GetLastMessageIdResponse", "ActiveConsumerChange", "GetTopicsOfNamespace", "GetTopicsOfNamespaceResponse", "GetSchema", "GetSchemaResponse" }, null, new[]{ typeof(global::Pulsar.Proto.BaseCommand.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CompressionType {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("LZ4")] Lz4 = 1,
    [pbr::OriginalName("ZLIB")] Zlib = 2,
  }

  public enum ServerError {
    [pbr::OriginalName("UnknownError")] UnknownError = 0,
    /// <summary>
    /// Error with ZK/metadata
    /// </summary>
    [pbr::OriginalName("MetadataError")] MetadataError = 1,
    /// <summary>
    /// Error writing reading from BK
    /// </summary>
    [pbr::OriginalName("PersistenceError")] PersistenceError = 2,
    /// <summary>
    /// Non valid authentication
    /// </summary>
    [pbr::OriginalName("AuthenticationError")] AuthenticationError = 3,
    /// <summary>
    /// Not authorized to use resource
    /// </summary>
    [pbr::OriginalName("AuthorizationError")] AuthorizationError = 4,
    /// <summary>
    /// Unable to subscribe/unsubscribe because
    /// </summary>
    [pbr::OriginalName("ConsumerBusy")] ConsumerBusy = 5,
    /// <summary>
    /// other consumers are connected
    /// </summary>
    [pbr::OriginalName("ServiceNotReady")] ServiceNotReady = 6,
    /// <summary>
    /// Unable to create producer because backlog quota exceeded
    /// </summary>
    [pbr::OriginalName("ProducerBlockedQuotaExceededError")] ProducerBlockedQuotaExceededError = 7,
    /// <summary>
    /// Exception while creating producer because quota exceeded
    /// </summary>
    [pbr::OriginalName("ProducerBlockedQuotaExceededException")] ProducerBlockedQuotaExceededException = 8,
    /// <summary>
    /// Error while verifying message checksum
    /// </summary>
    [pbr::OriginalName("ChecksumError")] ChecksumError = 9,
    /// <summary>
    /// Error when an older client/version doesn't support a feature
    /// </summary>
    [pbr::OriginalName("UnsupportedVersionError")] UnsupportedVersionError = 10,
    /// <summary>
    /// Topic not found
    /// </summary>
    [pbr::OriginalName("TopicNotFound")] TopicNotFound = 11,
    /// <summary>
    /// Subscription not found
    /// </summary>
    [pbr::OriginalName("SubscriptionNotFound")] SubscriptionNotFound = 12,
    /// <summary>
    /// Consumer not found
    /// </summary>
    [pbr::OriginalName("ConsumerNotFound")] ConsumerNotFound = 13,
    /// <summary>
    /// Error with too many simultaneously request
    /// </summary>
    [pbr::OriginalName("TooManyRequests")] TooManyRequests = 14,
    /// <summary>
    /// The topic has been terminated
    /// </summary>
    [pbr::OriginalName("TopicTerminatedError")] TopicTerminatedError = 15,
    /// <summary>
    /// Producer with same name is already connected
    /// </summary>
    [pbr::OriginalName("ProducerBusy")] ProducerBusy = 16,
    /// <summary>
    /// The topic name is not valid
    /// </summary>
    [pbr::OriginalName("InvalidTopicName")] InvalidTopicName = 17,
  }

  public enum AuthMethod {
    [pbr::OriginalName("AuthMethodNone")] None = 0,
    [pbr::OriginalName("AuthMethodYcaV1")] YcaV1 = 1,
    [pbr::OriginalName("AuthMethodAthens")] Athens = 2,
  }

  /// <summary>
  /// Each protocol version identify new features that are
  /// incrementally added to the protocol
  /// </summary>
  public enum ProtocolVersion {
    /// <summary>
    /// Initial versioning
    /// </summary>
    [pbr::OriginalName("v0")] V0 = 0,
    /// <summary>
    /// Added application keep-alive
    /// </summary>
    [pbr::OriginalName("v1")] V1 = 1,
    /// <summary>
    /// Added RedeliverUnacknowledgedMessages Command
    /// </summary>
    [pbr::OriginalName("v2")] V2 = 2,
    /// <summary>
    /// Added compression with LZ4 and ZLib
    /// </summary>
    [pbr::OriginalName("v3")] V3 = 3,
    /// <summary>
    /// Added batch message support
    /// </summary>
    [pbr::OriginalName("v4")] V4 = 4,
    /// <summary>
    /// Added disconnect client w/o closing connection
    /// </summary>
    [pbr::OriginalName("v5")] V5 = 5,
    /// <summary>
    /// Added checksum computation for metadata + payload
    /// </summary>
    [pbr::OriginalName("v6")] V6 = 6,
    /// <summary>
    /// Added CommandLookupTopic - Binary Lookup
    /// </summary>
    [pbr::OriginalName("v7")] V7 = 7,
    /// <summary>
    /// Added CommandConsumerStats - Client fetches broker side consumer stats
    /// </summary>
    [pbr::OriginalName("v8")] V8 = 8,
    /// <summary>
    /// Added end of topic notification
    /// </summary>
    [pbr::OriginalName("v9")] V9 = 9,
    /// <summary>
    /// Added proxy to broker
    /// </summary>
    [pbr::OriginalName("v10")] V10 = 10,
    /// <summary>
    /// C++ consumers before this version are not correctly handling the checksum field
    /// </summary>
    [pbr::OriginalName("v11")] V11 = 11,
    /// <summary>
    /// Added get topic's last messageId from broker
    /// </summary>
    [pbr::OriginalName("v12")] V12 = 12,
    /// <summary>
    /// Added CommandActiveConsumerChange
    /// Added CommandGetTopicsOfNamespace
    /// </summary>
    [pbr::OriginalName("v13")] V13 = 13,
  }

  #endregion

  #region Messages
  public sealed partial class Schema : pb::IMessage<Schema> {
    private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema(Schema other) : this() {
      name_ = other.name_;
      schemaData_ = other.schemaData_;
      type_ = other.type_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema Clone() {
      return new Schema(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema_data" field.</summary>
    public const int SchemaDataFieldNumber = 3;
    private pb::ByteString schemaData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SchemaData {
      get { return schemaData_; }
      set {
        schemaData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Pulsar.Proto.Schema.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.Schema.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.KeyValue> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(42, global::Pulsar.Proto.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.KeyValue> properties_ = new pbc::RepeatedField<global::Pulsar.Proto.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.KeyValue> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SchemaData != other.SchemaData) return false;
      if (Type != other.Type) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SchemaData.Length != 0) hash ^= SchemaData.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SchemaData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SchemaData);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SchemaData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SchemaData);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schema other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SchemaData.Length != 0) {
        SchemaData = other.SchemaData;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            SchemaData = input.ReadBytes();
            break;
          }
          case 32: {
            type_ = (global::Pulsar.Proto.Schema.Types.Type) input.ReadEnum();
            break;
          }
          case 42: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Schema message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("String")] String = 1,
        [pbr::OriginalName("Json")] Json = 2,
        [pbr::OriginalName("Protobuf")] Protobuf = 3,
        [pbr::OriginalName("Avro")] Avro = 4,
      }

    }
    #endregion

  }

  public sealed partial class MessageIdData : pb::IMessage<MessageIdData> {
    private static readonly pb::MessageParser<MessageIdData> _parser = new pb::MessageParser<MessageIdData>(() => new MessageIdData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageIdData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageIdData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageIdData(MessageIdData other) : this() {
      ledgerId_ = other.ledgerId_;
      entryId_ = other.entryId_;
      partition_ = other.partition_;
      batchIndex_ = other.batchIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageIdData Clone() {
      return new MessageIdData(this);
    }

    /// <summary>Field number for the "ledgerId" field.</summary>
    public const int LedgerIdFieldNumber = 1;
    private ulong ledgerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LedgerId {
      get { return ledgerId_; }
      set {
        ledgerId_ = value;
      }
    }

    /// <summary>Field number for the "entryId" field.</summary>
    public const int EntryIdFieldNumber = 2;
    private ulong entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EntryId {
      get { return entryId_; }
      set {
        entryId_ = value;
      }
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 3;
    private int partition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "batch_index" field.</summary>
    public const int BatchIndexFieldNumber = 4;
    private int batchIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BatchIndex {
      get { return batchIndex_; }
      set {
        batchIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageIdData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageIdData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LedgerId != other.LedgerId) return false;
      if (EntryId != other.EntryId) return false;
      if (Partition != other.Partition) return false;
      if (BatchIndex != other.BatchIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LedgerId != 0UL) hash ^= LedgerId.GetHashCode();
      if (EntryId != 0UL) hash ^= EntryId.GetHashCode();
      if (Partition != 0) hash ^= Partition.GetHashCode();
      if (BatchIndex != 0) hash ^= BatchIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LedgerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(LedgerId);
      }
      if (EntryId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(EntryId);
      }
      if (Partition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Partition);
      }
      if (BatchIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BatchIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LedgerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LedgerId);
      }
      if (EntryId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntryId);
      }
      if (Partition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Partition);
      }
      if (BatchIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageIdData other) {
      if (other == null) {
        return;
      }
      if (other.LedgerId != 0UL) {
        LedgerId = other.LedgerId;
      }
      if (other.EntryId != 0UL) {
        EntryId = other.EntryId;
      }
      if (other.Partition != 0) {
        Partition = other.Partition;
      }
      if (other.BatchIndex != 0) {
        BatchIndex = other.BatchIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LedgerId = input.ReadUInt64();
            break;
          }
          case 16: {
            EntryId = input.ReadUInt64();
            break;
          }
          case 24: {
            Partition = input.ReadInt32();
            break;
          }
          case 32: {
            BatchIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValue : pb::IMessage<KeyValue> {
    private static readonly pb::MessageParser<KeyValue> _parser = new pb::MessageParser<KeyValue>(() => new KeyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue(KeyValue other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue Clone() {
      return new KeyValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValue other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyLongValue : pb::IMessage<KeyLongValue> {
    private static readonly pb::MessageParser<KeyLongValue> _parser = new pb::MessageParser<KeyLongValue>(() => new KeyLongValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyLongValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyLongValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyLongValue(KeyLongValue other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyLongValue Clone() {
      return new KeyLongValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private ulong value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyLongValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyLongValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value != 0UL) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyLongValue other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value != 0UL) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EncryptionKeys : pb::IMessage<EncryptionKeys> {
    private static readonly pb::MessageParser<EncryptionKeys> _parser = new pb::MessageParser<EncryptionKeys>(() => new EncryptionKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeys(EncryptionKeys other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeys Clone() {
      return new EncryptionKeys(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.KeyValue> _repeated_metadata_codec
        = pb::FieldCodec.ForMessage(26, global::Pulsar.Proto.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.KeyValue> metadata_ = new pbc::RepeatedField<global::Pulsar.Proto.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.KeyValue> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if(!metadata_.Equals(other.metadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      hash ^= metadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      metadata_.WriteTo(output, _repeated_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionKeys other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageMetadata : pb::IMessage<MessageMetadata> {
    private static readonly pb::MessageParser<MessageMetadata> _parser = new pb::MessageParser<MessageMetadata>(() => new MessageMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageMetadata(MessageMetadata other) : this() {
      producerName_ = other.producerName_;
      sequenceId_ = other.sequenceId_;
      publishTime_ = other.publishTime_;
      properties_ = other.properties_.Clone();
      replicatedFrom_ = other.replicatedFrom_;
      partitionKey_ = other.partitionKey_;
      replicateTo_ = other.replicateTo_.Clone();
      compression_ = other.compression_;
      uncompressedSize_ = other.uncompressedSize_;
      numMessagesInBatch_ = other.numMessagesInBatch_;
      eventTime_ = other.eventTime_;
      encryptionKeys_ = other.encryptionKeys_.Clone();
      encryptionAlgo_ = other.encryptionAlgo_;
      encryptionParam_ = other.encryptionParam_;
      schemaVersion_ = other.schemaVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageMetadata Clone() {
      return new MessageMetadata(this);
    }

    /// <summary>Field number for the "producer_name" field.</summary>
    public const int ProducerNameFieldNumber = 1;
    private string producerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducerName {
      get { return producerName_; }
      set {
        producerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_id" field.</summary>
    public const int SequenceIdFieldNumber = 2;
    private ulong sequenceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceId {
      get { return sequenceId_; }
      set {
        sequenceId_ = value;
      }
    }

    /// <summary>Field number for the "publish_time" field.</summary>
    public const int PublishTimeFieldNumber = 3;
    private ulong publishTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PublishTime {
      get { return publishTime_; }
      set {
        publishTime_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.KeyValue> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(34, global::Pulsar.Proto.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.KeyValue> properties_ = new pbc::RepeatedField<global::Pulsar.Proto.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.KeyValue> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "replicated_from" field.</summary>
    public const int ReplicatedFromFieldNumber = 5;
    private string replicatedFrom_ = "";
    /// <summary>
    /// Property set on replicated message,
    /// includes the source cluster name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplicatedFrom {
      get { return replicatedFrom_; }
      set {
        replicatedFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition_key" field.</summary>
    public const int PartitionKeyFieldNumber = 6;
    private string partitionKey_ = "";
    /// <summary>
    ///key to decide partition for the msg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PartitionKey {
      get { return partitionKey_; }
      set {
        partitionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replicate_to" field.</summary>
    public const int ReplicateToFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_replicateTo_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> replicateTo_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Override namespace's replication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ReplicateTo {
      get { return replicateTo_; }
    }

    /// <summary>Field number for the "compression" field.</summary>
    public const int CompressionFieldNumber = 8;
    private global::Pulsar.Proto.CompressionType compression_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CompressionType Compression {
      get { return compression_; }
      set {
        compression_ = value;
      }
    }

    /// <summary>Field number for the "uncompressed_size" field.</summary>
    public const int UncompressedSizeFieldNumber = 9;
    private uint uncompressedSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UncompressedSize {
      get { return uncompressedSize_; }
      set {
        uncompressedSize_ = value;
      }
    }

    /// <summary>Field number for the "num_messages_in_batch" field.</summary>
    public const int NumMessagesInBatchFieldNumber = 11;
    private int numMessagesInBatch_;
    /// <summary>
    /// Removed below checksum field from Metadata as
    /// it should be part of send-command which keeps checksum of header + payload
    ///sfixed64 checksum = 10;
    /// differentiate single and batch message metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumMessagesInBatch {
      get { return numMessagesInBatch_; }
      set {
        numMessagesInBatch_ = value;
      }
    }

    /// <summary>Field number for the "event_time" field.</summary>
    public const int EventTimeFieldNumber = 12;
    private ulong eventTime_;
    /// <summary>
    /// the timestamp that this event occurs. it is typically set by applications.
    /// if this field is omitted, `publish_time` can be used for the purpose of `event_time`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EventTime {
      get { return eventTime_; }
      set {
        eventTime_ = value;
      }
    }

    /// <summary>Field number for the "encryption_keys" field.</summary>
    public const int EncryptionKeysFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.EncryptionKeys> _repeated_encryptionKeys_codec
        = pb::FieldCodec.ForMessage(106, global::Pulsar.Proto.EncryptionKeys.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.EncryptionKeys> encryptionKeys_ = new pbc::RepeatedField<global::Pulsar.Proto.EncryptionKeys>();
    /// <summary>
    /// Contains encryption key name, encrypted key and metadata to describe the key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.EncryptionKeys> EncryptionKeys {
      get { return encryptionKeys_; }
    }

    /// <summary>Field number for the "encryption_algo" field.</summary>
    public const int EncryptionAlgoFieldNumber = 14;
    private string encryptionAlgo_ = "";
    /// <summary>
    /// Algorithm used to encrypt data key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncryptionAlgo {
      get { return encryptionAlgo_; }
      set {
        encryptionAlgo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encryption_param" field.</summary>
    public const int EncryptionParamFieldNumber = 15;
    private pb::ByteString encryptionParam_ = pb::ByteString.Empty;
    /// <summary>
    /// Additional parameters by encryption
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EncryptionParam {
      get { return encryptionParam_; }
      set {
        encryptionParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema_version" field.</summary>
    public const int SchemaVersionFieldNumber = 16;
    private pb::ByteString schemaVersion_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SchemaVersion {
      get { return schemaVersion_; }
      set {
        schemaVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducerName != other.ProducerName) return false;
      if (SequenceId != other.SequenceId) return false;
      if (PublishTime != other.PublishTime) return false;
      if(!properties_.Equals(other.properties_)) return false;
      if (ReplicatedFrom != other.ReplicatedFrom) return false;
      if (PartitionKey != other.PartitionKey) return false;
      if(!replicateTo_.Equals(other.replicateTo_)) return false;
      if (Compression != other.Compression) return false;
      if (UncompressedSize != other.UncompressedSize) return false;
      if (NumMessagesInBatch != other.NumMessagesInBatch) return false;
      if (EventTime != other.EventTime) return false;
      if(!encryptionKeys_.Equals(other.encryptionKeys_)) return false;
      if (EncryptionAlgo != other.EncryptionAlgo) return false;
      if (EncryptionParam != other.EncryptionParam) return false;
      if (SchemaVersion != other.SchemaVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducerName.Length != 0) hash ^= ProducerName.GetHashCode();
      if (SequenceId != 0UL) hash ^= SequenceId.GetHashCode();
      if (PublishTime != 0UL) hash ^= PublishTime.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (ReplicatedFrom.Length != 0) hash ^= ReplicatedFrom.GetHashCode();
      if (PartitionKey.Length != 0) hash ^= PartitionKey.GetHashCode();
      hash ^= replicateTo_.GetHashCode();
      if (Compression != 0) hash ^= Compression.GetHashCode();
      if (UncompressedSize != 0) hash ^= UncompressedSize.GetHashCode();
      if (NumMessagesInBatch != 0) hash ^= NumMessagesInBatch.GetHashCode();
      if (EventTime != 0UL) hash ^= EventTime.GetHashCode();
      hash ^= encryptionKeys_.GetHashCode();
      if (EncryptionAlgo.Length != 0) hash ^= EncryptionAlgo.GetHashCode();
      if (EncryptionParam.Length != 0) hash ^= EncryptionParam.GetHashCode();
      if (SchemaVersion.Length != 0) hash ^= SchemaVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProducerName);
      }
      if (SequenceId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceId);
      }
      if (PublishTime != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(PublishTime);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (ReplicatedFrom.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ReplicatedFrom);
      }
      if (PartitionKey.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PartitionKey);
      }
      replicateTo_.WriteTo(output, _repeated_replicateTo_codec);
      if (Compression != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Compression);
      }
      if (UncompressedSize != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(UncompressedSize);
      }
      if (NumMessagesInBatch != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(NumMessagesInBatch);
      }
      if (EventTime != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(EventTime);
      }
      encryptionKeys_.WriteTo(output, _repeated_encryptionKeys_codec);
      if (EncryptionAlgo.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(EncryptionAlgo);
      }
      if (EncryptionParam.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(EncryptionParam);
      }
      if (SchemaVersion.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(SchemaVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducerName);
      }
      if (SequenceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceId);
      }
      if (PublishTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PublishTime);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (ReplicatedFrom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplicatedFrom);
      }
      if (PartitionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartitionKey);
      }
      size += replicateTo_.CalculateSize(_repeated_replicateTo_codec);
      if (Compression != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Compression);
      }
      if (UncompressedSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UncompressedSize);
      }
      if (NumMessagesInBatch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumMessagesInBatch);
      }
      if (EventTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EventTime);
      }
      size += encryptionKeys_.CalculateSize(_repeated_encryptionKeys_codec);
      if (EncryptionAlgo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptionAlgo);
      }
      if (EncryptionParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptionParam);
      }
      if (SchemaVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(SchemaVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ProducerName.Length != 0) {
        ProducerName = other.ProducerName;
      }
      if (other.SequenceId != 0UL) {
        SequenceId = other.SequenceId;
      }
      if (other.PublishTime != 0UL) {
        PublishTime = other.PublishTime;
      }
      properties_.Add(other.properties_);
      if (other.ReplicatedFrom.Length != 0) {
        ReplicatedFrom = other.ReplicatedFrom;
      }
      if (other.PartitionKey.Length != 0) {
        PartitionKey = other.PartitionKey;
      }
      replicateTo_.Add(other.replicateTo_);
      if (other.Compression != 0) {
        Compression = other.Compression;
      }
      if (other.UncompressedSize != 0) {
        UncompressedSize = other.UncompressedSize;
      }
      if (other.NumMessagesInBatch != 0) {
        NumMessagesInBatch = other.NumMessagesInBatch;
      }
      if (other.EventTime != 0UL) {
        EventTime = other.EventTime;
      }
      encryptionKeys_.Add(other.encryptionKeys_);
      if (other.EncryptionAlgo.Length != 0) {
        EncryptionAlgo = other.EncryptionAlgo;
      }
      if (other.EncryptionParam.Length != 0) {
        EncryptionParam = other.EncryptionParam;
      }
      if (other.SchemaVersion.Length != 0) {
        SchemaVersion = other.SchemaVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProducerName = input.ReadString();
            break;
          }
          case 16: {
            SequenceId = input.ReadUInt64();
            break;
          }
          case 24: {
            PublishTime = input.ReadUInt64();
            break;
          }
          case 34: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 42: {
            ReplicatedFrom = input.ReadString();
            break;
          }
          case 50: {
            PartitionKey = input.ReadString();
            break;
          }
          case 58: {
            replicateTo_.AddEntriesFrom(input, _repeated_replicateTo_codec);
            break;
          }
          case 64: {
            compression_ = (global::Pulsar.Proto.CompressionType) input.ReadEnum();
            break;
          }
          case 72: {
            UncompressedSize = input.ReadUInt32();
            break;
          }
          case 88: {
            NumMessagesInBatch = input.ReadInt32();
            break;
          }
          case 96: {
            EventTime = input.ReadUInt64();
            break;
          }
          case 106: {
            encryptionKeys_.AddEntriesFrom(input, _repeated_encryptionKeys_codec);
            break;
          }
          case 114: {
            EncryptionAlgo = input.ReadString();
            break;
          }
          case 122: {
            EncryptionParam = input.ReadBytes();
            break;
          }
          case 130: {
            SchemaVersion = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleMessageMetadata : pb::IMessage<SingleMessageMetadata> {
    private static readonly pb::MessageParser<SingleMessageMetadata> _parser = new pb::MessageParser<SingleMessageMetadata>(() => new SingleMessageMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleMessageMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleMessageMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleMessageMetadata(SingleMessageMetadata other) : this() {
      properties_ = other.properties_.Clone();
      partitionKey_ = other.partitionKey_;
      payloadSize_ = other.payloadSize_;
      compactedOut_ = other.compactedOut_;
      eventTime_ = other.eventTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleMessageMetadata Clone() {
      return new SingleMessageMetadata(this);
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.KeyValue> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(10, global::Pulsar.Proto.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.KeyValue> properties_ = new pbc::RepeatedField<global::Pulsar.Proto.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.KeyValue> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "partition_key" field.</summary>
    public const int PartitionKeyFieldNumber = 2;
    private string partitionKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PartitionKey {
      get { return partitionKey_; }
      set {
        partitionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload_size" field.</summary>
    public const int PayloadSizeFieldNumber = 3;
    private int payloadSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PayloadSize {
      get { return payloadSize_; }
      set {
        payloadSize_ = value;
      }
    }

    /// <summary>Field number for the "compacted_out" field.</summary>
    public const int CompactedOutFieldNumber = 4;
    private bool compactedOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CompactedOut {
      get { return compactedOut_; }
      set {
        compactedOut_ = value;
      }
    }

    /// <summary>Field number for the "event_time" field.</summary>
    public const int EventTimeFieldNumber = 5;
    private ulong eventTime_;
    /// <summary>
    /// the timestamp that this event occurs. it is typically set by applications.
    /// if this field is omitted, `publish_time` can be used for the purpose of `event_time`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EventTime {
      get { return eventTime_; }
      set {
        eventTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleMessageMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleMessageMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!properties_.Equals(other.properties_)) return false;
      if (PartitionKey != other.PartitionKey) return false;
      if (PayloadSize != other.PayloadSize) return false;
      if (CompactedOut != other.CompactedOut) return false;
      if (EventTime != other.EventTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= properties_.GetHashCode();
      if (PartitionKey.Length != 0) hash ^= PartitionKey.GetHashCode();
      if (PayloadSize != 0) hash ^= PayloadSize.GetHashCode();
      if (CompactedOut != false) hash ^= CompactedOut.GetHashCode();
      if (EventTime != 0UL) hash ^= EventTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      properties_.WriteTo(output, _repeated_properties_codec);
      if (PartitionKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PartitionKey);
      }
      if (PayloadSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PayloadSize);
      }
      if (CompactedOut != false) {
        output.WriteRawTag(32);
        output.WriteBool(CompactedOut);
      }
      if (EventTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(EventTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (PartitionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartitionKey);
      }
      if (PayloadSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PayloadSize);
      }
      if (CompactedOut != false) {
        size += 1 + 1;
      }
      if (EventTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EventTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleMessageMetadata other) {
      if (other == null) {
        return;
      }
      properties_.Add(other.properties_);
      if (other.PartitionKey.Length != 0) {
        PartitionKey = other.PartitionKey;
      }
      if (other.PayloadSize != 0) {
        PayloadSize = other.PayloadSize;
      }
      if (other.CompactedOut != false) {
        CompactedOut = other.CompactedOut;
      }
      if (other.EventTime != 0UL) {
        EventTime = other.EventTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 18: {
            PartitionKey = input.ReadString();
            break;
          }
          case 24: {
            PayloadSize = input.ReadInt32();
            break;
          }
          case 32: {
            CompactedOut = input.ReadBool();
            break;
          }
          case 40: {
            EventTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandConnect : pb::IMessage<CommandConnect> {
    private static readonly pb::MessageParser<CommandConnect> _parser = new pb::MessageParser<CommandConnect>(() => new CommandConnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandConnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConnect(CommandConnect other) : this() {
      clientVersion_ = other.clientVersion_;
      authMethod_ = other.authMethod_;
      authMethodName_ = other.authMethodName_;
      authData_ = other.authData_;
      protocolVersion_ = other.protocolVersion_;
      proxyToBrokerUrl_ = other.proxyToBrokerUrl_;
      originalPrincipal_ = other.originalPrincipal_;
      originalAuthData_ = other.originalAuthData_;
      originalAuthMethod_ = other.originalAuthMethod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConnect Clone() {
      return new CommandConnect(this);
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 1;
    private string clientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auth_method" field.</summary>
    public const int AuthMethodFieldNumber = 2;
    private global::Pulsar.Proto.AuthMethod authMethod_ = 0;
    /// <summary>
    /// Deprecated. Use "auth_method_name" instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.AuthMethod AuthMethod {
      get { return authMethod_; }
      set {
        authMethod_ = value;
      }
    }

    /// <summary>Field number for the "auth_method_name" field.</summary>
    public const int AuthMethodNameFieldNumber = 5;
    private string authMethodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthMethodName {
      get { return authMethodName_; }
      set {
        authMethodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auth_data" field.</summary>
    public const int AuthDataFieldNumber = 3;
    private pb::ByteString authData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AuthData {
      get { return authData_; }
      set {
        authData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 4;
    private int protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "proxy_to_broker_url" field.</summary>
    public const int ProxyToBrokerUrlFieldNumber = 6;
    private string proxyToBrokerUrl_ = "";
    /// <summary>
    /// Client can ask to be proxyied to a specific broker
    /// This is only honored by a Pulsar proxy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProxyToBrokerUrl {
      get { return proxyToBrokerUrl_; }
      set {
        proxyToBrokerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_principal" field.</summary>
    public const int OriginalPrincipalFieldNumber = 7;
    private string originalPrincipal_ = "";
    /// <summary>
    /// Original principal that was verified by
    /// a Pulsar proxy. In this case the auth info above
    /// will be the auth of the proxy itself
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalPrincipal {
      get { return originalPrincipal_; }
      set {
        originalPrincipal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_auth_data" field.</summary>
    public const int OriginalAuthDataFieldNumber = 8;
    private string originalAuthData_ = "";
    /// <summary>
    /// Original auth role and auth Method that was passed
    /// to the proxy. In this case the auth info above
    /// will be the auth of the proxy itself
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalAuthData {
      get { return originalAuthData_; }
      set {
        originalAuthData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_auth_method" field.</summary>
    public const int OriginalAuthMethodFieldNumber = 9;
    private string originalAuthMethod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalAuthMethod {
      get { return originalAuthMethod_; }
      set {
        originalAuthMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandConnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandConnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientVersion != other.ClientVersion) return false;
      if (AuthMethod != other.AuthMethod) return false;
      if (AuthMethodName != other.AuthMethodName) return false;
      if (AuthData != other.AuthData) return false;
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (ProxyToBrokerUrl != other.ProxyToBrokerUrl) return false;
      if (OriginalPrincipal != other.OriginalPrincipal) return false;
      if (OriginalAuthData != other.OriginalAuthData) return false;
      if (OriginalAuthMethod != other.OriginalAuthMethod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (AuthMethod != 0) hash ^= AuthMethod.GetHashCode();
      if (AuthMethodName.Length != 0) hash ^= AuthMethodName.GetHashCode();
      if (AuthData.Length != 0) hash ^= AuthData.GetHashCode();
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (ProxyToBrokerUrl.Length != 0) hash ^= ProxyToBrokerUrl.GetHashCode();
      if (OriginalPrincipal.Length != 0) hash ^= OriginalPrincipal.GetHashCode();
      if (OriginalAuthData.Length != 0) hash ^= OriginalAuthData.GetHashCode();
      if (OriginalAuthMethod.Length != 0) hash ^= OriginalAuthMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientVersion);
      }
      if (AuthMethod != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AuthMethod);
      }
      if (AuthData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(AuthData);
      }
      if (ProtocolVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProtocolVersion);
      }
      if (AuthMethodName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AuthMethodName);
      }
      if (ProxyToBrokerUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProxyToBrokerUrl);
      }
      if (OriginalPrincipal.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OriginalPrincipal);
      }
      if (OriginalAuthData.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OriginalAuthData);
      }
      if (OriginalAuthMethod.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OriginalAuthMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (AuthMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AuthMethod);
      }
      if (AuthMethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthMethodName);
      }
      if (AuthData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthData);
      }
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolVersion);
      }
      if (ProxyToBrokerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyToBrokerUrl);
      }
      if (OriginalPrincipal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalPrincipal);
      }
      if (OriginalAuthData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalAuthData);
      }
      if (OriginalAuthMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalAuthMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandConnect other) {
      if (other == null) {
        return;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.AuthMethod != 0) {
        AuthMethod = other.AuthMethod;
      }
      if (other.AuthMethodName.Length != 0) {
        AuthMethodName = other.AuthMethodName;
      }
      if (other.AuthData.Length != 0) {
        AuthData = other.AuthData;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.ProxyToBrokerUrl.Length != 0) {
        ProxyToBrokerUrl = other.ProxyToBrokerUrl;
      }
      if (other.OriginalPrincipal.Length != 0) {
        OriginalPrincipal = other.OriginalPrincipal;
      }
      if (other.OriginalAuthData.Length != 0) {
        OriginalAuthData = other.OriginalAuthData;
      }
      if (other.OriginalAuthMethod.Length != 0) {
        OriginalAuthMethod = other.OriginalAuthMethod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientVersion = input.ReadString();
            break;
          }
          case 16: {
            authMethod_ = (global::Pulsar.Proto.AuthMethod) input.ReadEnum();
            break;
          }
          case 26: {
            AuthData = input.ReadBytes();
            break;
          }
          case 32: {
            ProtocolVersion = input.ReadInt32();
            break;
          }
          case 42: {
            AuthMethodName = input.ReadString();
            break;
          }
          case 50: {
            ProxyToBrokerUrl = input.ReadString();
            break;
          }
          case 58: {
            OriginalPrincipal = input.ReadString();
            break;
          }
          case 66: {
            OriginalAuthData = input.ReadString();
            break;
          }
          case 74: {
            OriginalAuthMethod = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandConnected : pb::IMessage<CommandConnected> {
    private static readonly pb::MessageParser<CommandConnected> _parser = new pb::MessageParser<CommandConnected>(() => new CommandConnected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandConnected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConnected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConnected(CommandConnected other) : this() {
      serverVersion_ = other.serverVersion_;
      protocolVersion_ = other.protocolVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConnected Clone() {
      return new CommandConnected(this);
    }

    /// <summary>Field number for the "server_version" field.</summary>
    public const int ServerVersionFieldNumber = 1;
    private string serverVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerVersion {
      get { return serverVersion_; }
      set {
        serverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 2;
    private int protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandConnected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandConnected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerVersion != other.ServerVersion) return false;
      if (ProtocolVersion != other.ProtocolVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerVersion.Length != 0) hash ^= ServerVersion.GetHashCode();
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerVersion);
      }
      if (ProtocolVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProtocolVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerVersion);
      }
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandConnected other) {
      if (other == null) {
        return;
      }
      if (other.ServerVersion.Length != 0) {
        ServerVersion = other.ServerVersion;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServerVersion = input.ReadString();
            break;
          }
          case 16: {
            ProtocolVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandSubscribe : pb::IMessage<CommandSubscribe> {
    private static readonly pb::MessageParser<CommandSubscribe> _parser = new pb::MessageParser<CommandSubscribe>(() => new CommandSubscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandSubscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSubscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSubscribe(CommandSubscribe other) : this() {
      topic_ = other.topic_;
      subscription_ = other.subscription_;
      subType_ = other.subType_;
      consumerId_ = other.consumerId_;
      requestId_ = other.requestId_;
      consumerName_ = other.consumerName_;
      priorityLevel_ = other.priorityLevel_;
      durable_ = other.durable_;
      startMessageId_ = other.startMessageId_ != null ? other.startMessageId_.Clone() : null;
      metadata_ = other.metadata_.Clone();
      readCompacted_ = other.readCompacted_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      initialPosition_ = other.initialPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSubscribe Clone() {
      return new CommandSubscribe(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription" field.</summary>
    public const int SubscriptionFieldNumber = 2;
    private string subscription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subscription {
      get { return subscription_; }
      set {
        subscription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subType" field.</summary>
    public const int SubTypeFieldNumber = 3;
    private global::Pulsar.Proto.CommandSubscribe.Types.SubType subType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSubscribe.Types.SubType SubType {
      get { return subType_; }
      set {
        subType_ = value;
      }
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 4;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 5;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "consumer_name" field.</summary>
    public const int ConsumerNameFieldNumber = 6;
    private string consumerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConsumerName {
      get { return consumerName_; }
      set {
        consumerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority_level" field.</summary>
    public const int PriorityLevelFieldNumber = 7;
    private int priorityLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PriorityLevel {
      get { return priorityLevel_; }
      set {
        priorityLevel_ = value;
      }
    }

    /// <summary>Field number for the "durable" field.</summary>
    public const int DurableFieldNumber = 8;
    private bool durable_;
    /// <summary>
    /// Signal wether the subscription should be backed by a
    /// durable cursor or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Durable {
      get { return durable_; }
      set {
        durable_ = value;
      }
    }

    /// <summary>Field number for the "start_message_id" field.</summary>
    public const int StartMessageIdFieldNumber = 9;
    private global::Pulsar.Proto.MessageIdData startMessageId_;
    /// <summary>
    /// If specified, the subscription will position the cursor
    /// markd-delete position  on the particular message id and
    /// will send messages from that point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.MessageIdData StartMessageId {
      get { return startMessageId_; }
      set {
        startMessageId_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.KeyValue> _repeated_metadata_codec
        = pb::FieldCodec.ForMessage(82, global::Pulsar.Proto.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.KeyValue> metadata_ = new pbc::RepeatedField<global::Pulsar.Proto.KeyValue>();
    /// <summary>
    //// Add metadata key=value to this consumer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.KeyValue> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "read_compacted" field.</summary>
    public const int ReadCompactedFieldNumber = 11;
    private bool readCompacted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReadCompacted {
      get { return readCompacted_; }
      set {
        readCompacted_ = value;
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 12;
    private global::Pulsar.Proto.Schema schema_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "initialPosition" field.</summary>
    public const int InitialPositionFieldNumber = 13;
    private global::Pulsar.Proto.CommandSubscribe.Types.InitialPosition initialPosition_ = 0;
    /// <summary>
    /// Signal wthether the subscription will initialize on latest
    /// or not -- earliest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSubscribe.Types.InitialPosition InitialPosition {
      get { return initialPosition_; }
      set {
        initialPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandSubscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandSubscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (Subscription != other.Subscription) return false;
      if (SubType != other.SubType) return false;
      if (ConsumerId != other.ConsumerId) return false;
      if (RequestId != other.RequestId) return false;
      if (ConsumerName != other.ConsumerName) return false;
      if (PriorityLevel != other.PriorityLevel) return false;
      if (Durable != other.Durable) return false;
      if (!object.Equals(StartMessageId, other.StartMessageId)) return false;
      if(!metadata_.Equals(other.metadata_)) return false;
      if (ReadCompacted != other.ReadCompacted) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (InitialPosition != other.InitialPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Subscription.Length != 0) hash ^= Subscription.GetHashCode();
      if (SubType != 0) hash ^= SubType.GetHashCode();
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (ConsumerName.Length != 0) hash ^= ConsumerName.GetHashCode();
      if (PriorityLevel != 0) hash ^= PriorityLevel.GetHashCode();
      if (Durable != false) hash ^= Durable.GetHashCode();
      if (startMessageId_ != null) hash ^= StartMessageId.GetHashCode();
      hash ^= metadata_.GetHashCode();
      if (ReadCompacted != false) hash ^= ReadCompacted.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (InitialPosition != 0) hash ^= InitialPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Subscription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subscription);
      }
      if (SubType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SubType);
      }
      if (ConsumerId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ConsumerId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(RequestId);
      }
      if (ConsumerName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ConsumerName);
      }
      if (PriorityLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PriorityLevel);
      }
      if (Durable != false) {
        output.WriteRawTag(64);
        output.WriteBool(Durable);
      }
      if (startMessageId_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(StartMessageId);
      }
      metadata_.WriteTo(output, _repeated_metadata_codec);
      if (ReadCompacted != false) {
        output.WriteRawTag(88);
        output.WriteBool(ReadCompacted);
      }
      if (schema_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Schema);
      }
      if (InitialPosition != 0) {
        output.WriteRawTag(104);
        output.WriteEnum((int) InitialPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Subscription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subscription);
      }
      if (SubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubType);
      }
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (ConsumerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConsumerName);
      }
      if (PriorityLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriorityLevel);
      }
      if (Durable != false) {
        size += 1 + 1;
      }
      if (startMessageId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartMessageId);
      }
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      if (ReadCompacted != false) {
        size += 1 + 1;
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (InitialPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InitialPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandSubscribe other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Subscription.Length != 0) {
        Subscription = other.Subscription;
      }
      if (other.SubType != 0) {
        SubType = other.SubType;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.ConsumerName.Length != 0) {
        ConsumerName = other.ConsumerName;
      }
      if (other.PriorityLevel != 0) {
        PriorityLevel = other.PriorityLevel;
      }
      if (other.Durable != false) {
        Durable = other.Durable;
      }
      if (other.startMessageId_ != null) {
        if (startMessageId_ == null) {
          startMessageId_ = new global::Pulsar.Proto.MessageIdData();
        }
        StartMessageId.MergeFrom(other.StartMessageId);
      }
      metadata_.Add(other.metadata_);
      if (other.ReadCompacted != false) {
        ReadCompacted = other.ReadCompacted;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          schema_ = new global::Pulsar.Proto.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.InitialPosition != 0) {
        InitialPosition = other.InitialPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            Subscription = input.ReadString();
            break;
          }
          case 24: {
            subType_ = (global::Pulsar.Proto.CommandSubscribe.Types.SubType) input.ReadEnum();
            break;
          }
          case 32: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 40: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 50: {
            ConsumerName = input.ReadString();
            break;
          }
          case 56: {
            PriorityLevel = input.ReadInt32();
            break;
          }
          case 64: {
            Durable = input.ReadBool();
            break;
          }
          case 74: {
            if (startMessageId_ == null) {
              startMessageId_ = new global::Pulsar.Proto.MessageIdData();
            }
            input.ReadMessage(startMessageId_);
            break;
          }
          case 82: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
          case 88: {
            ReadCompacted = input.ReadBool();
            break;
          }
          case 98: {
            if (schema_ == null) {
              schema_ = new global::Pulsar.Proto.Schema();
            }
            input.ReadMessage(schema_);
            break;
          }
          case 104: {
            initialPosition_ = (global::Pulsar.Proto.CommandSubscribe.Types.InitialPosition) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommandSubscribe message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SubType {
        [pbr::OriginalName("Exclusive")] Exclusive = 0,
        [pbr::OriginalName("Shared")] Shared = 1,
        [pbr::OriginalName("Failover")] Failover = 2,
      }

      public enum InitialPosition {
        [pbr::OriginalName("Latest")] Latest = 0,
        [pbr::OriginalName("Earliest")] Earliest = 1,
      }

    }
    #endregion

  }

  public sealed partial class CommandPartitionedTopicMetadata : pb::IMessage<CommandPartitionedTopicMetadata> {
    private static readonly pb::MessageParser<CommandPartitionedTopicMetadata> _parser = new pb::MessageParser<CommandPartitionedTopicMetadata>(() => new CommandPartitionedTopicMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandPartitionedTopicMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPartitionedTopicMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPartitionedTopicMetadata(CommandPartitionedTopicMetadata other) : this() {
      topic_ = other.topic_;
      requestId_ = other.requestId_;
      originalPrincipal_ = other.originalPrincipal_;
      originalAuthData_ = other.originalAuthData_;
      originalAuthMethod_ = other.originalAuthMethod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPartitionedTopicMetadata Clone() {
      return new CommandPartitionedTopicMetadata(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "original_principal" field.</summary>
    public const int OriginalPrincipalFieldNumber = 3;
    private string originalPrincipal_ = "";
    /// <summary>
    /// TODO - Remove original_principal, original_auth_data, original_auth_method
    /// Original principal that was verified by
    /// a Pulsar proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalPrincipal {
      get { return originalPrincipal_; }
      set {
        originalPrincipal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_auth_data" field.</summary>
    public const int OriginalAuthDataFieldNumber = 4;
    private string originalAuthData_ = "";
    /// <summary>
    /// Original auth role and auth Method that was passed
    /// to the proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalAuthData {
      get { return originalAuthData_; }
      set {
        originalAuthData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_auth_method" field.</summary>
    public const int OriginalAuthMethodFieldNumber = 5;
    private string originalAuthMethod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalAuthMethod {
      get { return originalAuthMethod_; }
      set {
        originalAuthMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandPartitionedTopicMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandPartitionedTopicMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (RequestId != other.RequestId) return false;
      if (OriginalPrincipal != other.OriginalPrincipal) return false;
      if (OriginalAuthData != other.OriginalAuthData) return false;
      if (OriginalAuthMethod != other.OriginalAuthMethod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (OriginalPrincipal.Length != 0) hash ^= OriginalPrincipal.GetHashCode();
      if (OriginalAuthData.Length != 0) hash ^= OriginalAuthData.GetHashCode();
      if (OriginalAuthMethod.Length != 0) hash ^= OriginalAuthMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (OriginalPrincipal.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OriginalPrincipal);
      }
      if (OriginalAuthData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OriginalAuthData);
      }
      if (OriginalAuthMethod.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OriginalAuthMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (OriginalPrincipal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalPrincipal);
      }
      if (OriginalAuthData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalAuthData);
      }
      if (OriginalAuthMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalAuthMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandPartitionedTopicMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.OriginalPrincipal.Length != 0) {
        OriginalPrincipal = other.OriginalPrincipal;
      }
      if (other.OriginalAuthData.Length != 0) {
        OriginalAuthData = other.OriginalAuthData;
      }
      if (other.OriginalAuthMethod.Length != 0) {
        OriginalAuthMethod = other.OriginalAuthMethod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 26: {
            OriginalPrincipal = input.ReadString();
            break;
          }
          case 34: {
            OriginalAuthData = input.ReadString();
            break;
          }
          case 42: {
            OriginalAuthMethod = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandPartitionedTopicMetadataResponse : pb::IMessage<CommandPartitionedTopicMetadataResponse> {
    private static readonly pb::MessageParser<CommandPartitionedTopicMetadataResponse> _parser = new pb::MessageParser<CommandPartitionedTopicMetadataResponse>(() => new CommandPartitionedTopicMetadataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandPartitionedTopicMetadataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPartitionedTopicMetadataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPartitionedTopicMetadataResponse(CommandPartitionedTopicMetadataResponse other) : this() {
      partitions_ = other.partitions_;
      requestId_ = other.requestId_;
      response_ = other.response_;
      error_ = other.error_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPartitionedTopicMetadataResponse Clone() {
      return new CommandPartitionedTopicMetadataResponse(this);
    }

    /// <summary>Field number for the "partitions" field.</summary>
    public const int PartitionsFieldNumber = 1;
    private uint partitions_;
    /// <summary>
    /// in case of error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Partitions {
      get { return partitions_; }
      set {
        partitions_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 3;
    private global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse.Types.LookupType response_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse.Types.LookupType Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 4;
    private global::Pulsar.Proto.ServerError error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.ServerError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandPartitionedTopicMetadataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandPartitionedTopicMetadataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Partitions != other.Partitions) return false;
      if (RequestId != other.RequestId) return false;
      if (Response != other.Response) return false;
      if (Error != other.Error) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Partitions != 0) hash ^= Partitions.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (Response != 0) hash ^= Response.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Partitions != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Partitions);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (Response != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Response);
      }
      if (Error != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Error);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Partitions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Partitions);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (Response != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandPartitionedTopicMetadataResponse other) {
      if (other == null) {
        return;
      }
      if (other.Partitions != 0) {
        Partitions = other.Partitions;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.Response != 0) {
        Response = other.Response;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Partitions = input.ReadUInt32();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 24: {
            response_ = (global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse.Types.LookupType) input.ReadEnum();
            break;
          }
          case 32: {
            error_ = (global::Pulsar.Proto.ServerError) input.ReadEnum();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommandPartitionedTopicMetadataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LookupType {
        [pbr::OriginalName("Success")] Success = 0,
        [pbr::OriginalName("Failed")] Failed = 1,
      }

    }
    #endregion

  }

  public sealed partial class CommandLookupTopic : pb::IMessage<CommandLookupTopic> {
    private static readonly pb::MessageParser<CommandLookupTopic> _parser = new pb::MessageParser<CommandLookupTopic>(() => new CommandLookupTopic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandLookupTopic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandLookupTopic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandLookupTopic(CommandLookupTopic other) : this() {
      topic_ = other.topic_;
      requestId_ = other.requestId_;
      authoritative_ = other.authoritative_;
      originalPrincipal_ = other.originalPrincipal_;
      originalAuthData_ = other.originalAuthData_;
      originalAuthMethod_ = other.originalAuthMethod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandLookupTopic Clone() {
      return new CommandLookupTopic(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "authoritative" field.</summary>
    public const int AuthoritativeFieldNumber = 3;
    private bool authoritative_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Authoritative {
      get { return authoritative_; }
      set {
        authoritative_ = value;
      }
    }

    /// <summary>Field number for the "original_principal" field.</summary>
    public const int OriginalPrincipalFieldNumber = 4;
    private string originalPrincipal_ = "";
    /// <summary>
    /// TODO - Remove original_principal, original_auth_data, original_auth_method
    /// Original principal that was verified by
    /// a Pulsar proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalPrincipal {
      get { return originalPrincipal_; }
      set {
        originalPrincipal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_auth_data" field.</summary>
    public const int OriginalAuthDataFieldNumber = 5;
    private string originalAuthData_ = "";
    /// <summary>
    /// Original auth role and auth Method that was passed
    /// to the proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalAuthData {
      get { return originalAuthData_; }
      set {
        originalAuthData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "original_auth_method" field.</summary>
    public const int OriginalAuthMethodFieldNumber = 6;
    private string originalAuthMethod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalAuthMethod {
      get { return originalAuthMethod_; }
      set {
        originalAuthMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandLookupTopic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandLookupTopic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (RequestId != other.RequestId) return false;
      if (Authoritative != other.Authoritative) return false;
      if (OriginalPrincipal != other.OriginalPrincipal) return false;
      if (OriginalAuthData != other.OriginalAuthData) return false;
      if (OriginalAuthMethod != other.OriginalAuthMethod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (Authoritative != false) hash ^= Authoritative.GetHashCode();
      if (OriginalPrincipal.Length != 0) hash ^= OriginalPrincipal.GetHashCode();
      if (OriginalAuthData.Length != 0) hash ^= OriginalAuthData.GetHashCode();
      if (OriginalAuthMethod.Length != 0) hash ^= OriginalAuthMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (Authoritative != false) {
        output.WriteRawTag(24);
        output.WriteBool(Authoritative);
      }
      if (OriginalPrincipal.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OriginalPrincipal);
      }
      if (OriginalAuthData.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OriginalAuthData);
      }
      if (OriginalAuthMethod.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OriginalAuthMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (Authoritative != false) {
        size += 1 + 1;
      }
      if (OriginalPrincipal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalPrincipal);
      }
      if (OriginalAuthData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalAuthData);
      }
      if (OriginalAuthMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalAuthMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandLookupTopic other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.Authoritative != false) {
        Authoritative = other.Authoritative;
      }
      if (other.OriginalPrincipal.Length != 0) {
        OriginalPrincipal = other.OriginalPrincipal;
      }
      if (other.OriginalAuthData.Length != 0) {
        OriginalAuthData = other.OriginalAuthData;
      }
      if (other.OriginalAuthMethod.Length != 0) {
        OriginalAuthMethod = other.OriginalAuthMethod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 24: {
            Authoritative = input.ReadBool();
            break;
          }
          case 34: {
            OriginalPrincipal = input.ReadString();
            break;
          }
          case 42: {
            OriginalAuthData = input.ReadString();
            break;
          }
          case 50: {
            OriginalAuthMethod = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandLookupTopicResponse : pb::IMessage<CommandLookupTopicResponse> {
    private static readonly pb::MessageParser<CommandLookupTopicResponse> _parser = new pb::MessageParser<CommandLookupTopicResponse>(() => new CommandLookupTopicResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandLookupTopicResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandLookupTopicResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandLookupTopicResponse(CommandLookupTopicResponse other) : this() {
      brokerServiceUrl_ = other.brokerServiceUrl_;
      brokerServiceUrlTls_ = other.brokerServiceUrlTls_;
      response_ = other.response_;
      requestId_ = other.requestId_;
      authoritative_ = other.authoritative_;
      error_ = other.error_;
      message_ = other.message_;
      proxyThroughServiceUrl_ = other.proxyThroughServiceUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandLookupTopicResponse Clone() {
      return new CommandLookupTopicResponse(this);
    }

    /// <summary>Field number for the "brokerServiceUrl" field.</summary>
    public const int BrokerServiceUrlFieldNumber = 1;
    private string brokerServiceUrl_ = "";
    /// <summary>
    /// in case of error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrokerServiceUrl {
      get { return brokerServiceUrl_; }
      set {
        brokerServiceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "brokerServiceUrlTls" field.</summary>
    public const int BrokerServiceUrlTlsFieldNumber = 2;
    private string brokerServiceUrlTls_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrokerServiceUrlTls {
      get { return brokerServiceUrlTls_; }
      set {
        brokerServiceUrlTls_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 3;
    private global::Pulsar.Proto.CommandLookupTopicResponse.Types.LookupType response_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandLookupTopicResponse.Types.LookupType Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "authoritative" field.</summary>
    public const int AuthoritativeFieldNumber = 5;
    private bool authoritative_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Authoritative {
      get { return authoritative_; }
      set {
        authoritative_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 6;
    private global::Pulsar.Proto.ServerError error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.ServerError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 7;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proxy_through_service_url" field.</summary>
    public const int ProxyThroughServiceUrlFieldNumber = 8;
    private bool proxyThroughServiceUrl_;
    /// <summary>
    /// If it's true, indicates to the client that it must
    /// always connect through the service url after the
    /// lookup has been completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ProxyThroughServiceUrl {
      get { return proxyThroughServiceUrl_; }
      set {
        proxyThroughServiceUrl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandLookupTopicResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandLookupTopicResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrokerServiceUrl != other.BrokerServiceUrl) return false;
      if (BrokerServiceUrlTls != other.BrokerServiceUrlTls) return false;
      if (Response != other.Response) return false;
      if (RequestId != other.RequestId) return false;
      if (Authoritative != other.Authoritative) return false;
      if (Error != other.Error) return false;
      if (Message != other.Message) return false;
      if (ProxyThroughServiceUrl != other.ProxyThroughServiceUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BrokerServiceUrl.Length != 0) hash ^= BrokerServiceUrl.GetHashCode();
      if (BrokerServiceUrlTls.Length != 0) hash ^= BrokerServiceUrlTls.GetHashCode();
      if (Response != 0) hash ^= Response.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (Authoritative != false) hash ^= Authoritative.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (ProxyThroughServiceUrl != false) hash ^= ProxyThroughServiceUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BrokerServiceUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BrokerServiceUrl);
      }
      if (BrokerServiceUrlTls.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BrokerServiceUrlTls);
      }
      if (Response != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Response);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(RequestId);
      }
      if (Authoritative != false) {
        output.WriteRawTag(40);
        output.WriteBool(Authoritative);
      }
      if (Error != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Error);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Message);
      }
      if (ProxyThroughServiceUrl != false) {
        output.WriteRawTag(64);
        output.WriteBool(ProxyThroughServiceUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BrokerServiceUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrokerServiceUrl);
      }
      if (BrokerServiceUrlTls.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrokerServiceUrlTls);
      }
      if (Response != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (Authoritative != false) {
        size += 1 + 1;
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (ProxyThroughServiceUrl != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandLookupTopicResponse other) {
      if (other == null) {
        return;
      }
      if (other.BrokerServiceUrl.Length != 0) {
        BrokerServiceUrl = other.BrokerServiceUrl;
      }
      if (other.BrokerServiceUrlTls.Length != 0) {
        BrokerServiceUrlTls = other.BrokerServiceUrlTls;
      }
      if (other.Response != 0) {
        Response = other.Response;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.Authoritative != false) {
        Authoritative = other.Authoritative;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.ProxyThroughServiceUrl != false) {
        ProxyThroughServiceUrl = other.ProxyThroughServiceUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BrokerServiceUrl = input.ReadString();
            break;
          }
          case 18: {
            BrokerServiceUrlTls = input.ReadString();
            break;
          }
          case 24: {
            response_ = (global::Pulsar.Proto.CommandLookupTopicResponse.Types.LookupType) input.ReadEnum();
            break;
          }
          case 32: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 40: {
            Authoritative = input.ReadBool();
            break;
          }
          case 48: {
            error_ = (global::Pulsar.Proto.ServerError) input.ReadEnum();
            break;
          }
          case 58: {
            Message = input.ReadString();
            break;
          }
          case 64: {
            ProxyThroughServiceUrl = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommandLookupTopicResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LookupType {
        [pbr::OriginalName("Redirect")] Redirect = 0,
        [pbr::OriginalName("Connect")] Connect = 1,
        [pbr::OriginalName("Failed")] Failed = 2,
      }

    }
    #endregion

  }

  /// <summary>
  //// Create a new Producer on a topic, assigning the given producer_id,
  //// all messages sent with this producer_id will be persisted on the topic
  /// </summary>
  public sealed partial class CommandProducer : pb::IMessage<CommandProducer> {
    private static readonly pb::MessageParser<CommandProducer> _parser = new pb::MessageParser<CommandProducer>(() => new CommandProducer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandProducer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandProducer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandProducer(CommandProducer other) : this() {
      topic_ = other.topic_;
      producerId_ = other.producerId_;
      requestId_ = other.requestId_;
      producerName_ = other.producerName_;
      encrypted_ = other.encrypted_;
      metadata_ = other.metadata_.Clone();
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandProducer Clone() {
      return new CommandProducer(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "producer_id" field.</summary>
    public const int ProducerIdFieldNumber = 2;
    private ulong producerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProducerId {
      get { return producerId_; }
      set {
        producerId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 3;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "producer_name" field.</summary>
    public const int ProducerNameFieldNumber = 4;
    private string producerName_ = "";
    /// <summary>
    //// If a producer name is specified, the name will be used,
    //// otherwise the broker will generate a unique name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducerName {
      get { return producerName_; }
      set {
        producerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encrypted" field.</summary>
    public const int EncryptedFieldNumber = 5;
    private bool encrypted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Encrypted {
      get { return encrypted_; }
      set {
        encrypted_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.KeyValue> _repeated_metadata_codec
        = pb::FieldCodec.ForMessage(50, global::Pulsar.Proto.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.KeyValue> metadata_ = new pbc::RepeatedField<global::Pulsar.Proto.KeyValue>();
    /// <summary>
    //// Add metadata key=value to this producer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.KeyValue> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 7;
    private global::Pulsar.Proto.Schema schema_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandProducer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandProducer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (ProducerId != other.ProducerId) return false;
      if (RequestId != other.RequestId) return false;
      if (ProducerName != other.ProducerName) return false;
      if (Encrypted != other.Encrypted) return false;
      if(!metadata_.Equals(other.metadata_)) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (ProducerId != 0UL) hash ^= ProducerId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (ProducerName.Length != 0) hash ^= ProducerName.GetHashCode();
      if (Encrypted != false) hash ^= Encrypted.GetHashCode();
      hash ^= metadata_.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (ProducerId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ProducerId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(RequestId);
      }
      if (ProducerName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProducerName);
      }
      if (Encrypted != false) {
        output.WriteRawTag(40);
        output.WriteBool(Encrypted);
      }
      metadata_.WriteTo(output, _repeated_metadata_codec);
      if (schema_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Schema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (ProducerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProducerId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (ProducerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducerName);
      }
      if (Encrypted != false) {
        size += 1 + 1;
      }
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandProducer other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.ProducerId != 0UL) {
        ProducerId = other.ProducerId;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.ProducerName.Length != 0) {
        ProducerName = other.ProducerName;
      }
      if (other.Encrypted != false) {
        Encrypted = other.Encrypted;
      }
      metadata_.Add(other.metadata_);
      if (other.schema_ != null) {
        if (schema_ == null) {
          schema_ = new global::Pulsar.Proto.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            ProducerId = input.ReadUInt64();
            break;
          }
          case 24: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 34: {
            ProducerName = input.ReadString();
            break;
          }
          case 40: {
            Encrypted = input.ReadBool();
            break;
          }
          case 50: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
          case 58: {
            if (schema_ == null) {
              schema_ = new global::Pulsar.Proto.Schema();
            }
            input.ReadMessage(schema_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandSend : pb::IMessage<CommandSend> {
    private static readonly pb::MessageParser<CommandSend> _parser = new pb::MessageParser<CommandSend>(() => new CommandSend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandSend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSend(CommandSend other) : this() {
      producerId_ = other.producerId_;
      sequenceId_ = other.sequenceId_;
      numMessages_ = other.numMessages_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSend Clone() {
      return new CommandSend(this);
    }

    /// <summary>Field number for the "producer_id" field.</summary>
    public const int ProducerIdFieldNumber = 1;
    private ulong producerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProducerId {
      get { return producerId_; }
      set {
        producerId_ = value;
      }
    }

    /// <summary>Field number for the "sequence_id" field.</summary>
    public const int SequenceIdFieldNumber = 2;
    private ulong sequenceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceId {
      get { return sequenceId_; }
      set {
        sequenceId_ = value;
      }
    }

    /// <summary>Field number for the "num_messages" field.</summary>
    public const int NumMessagesFieldNumber = 3;
    private int numMessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumMessages {
      get { return numMessages_; }
      set {
        numMessages_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandSend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandSend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducerId != other.ProducerId) return false;
      if (SequenceId != other.SequenceId) return false;
      if (NumMessages != other.NumMessages) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducerId != 0UL) hash ^= ProducerId.GetHashCode();
      if (SequenceId != 0UL) hash ^= SequenceId.GetHashCode();
      if (NumMessages != 0) hash ^= NumMessages.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProducerId);
      }
      if (SequenceId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceId);
      }
      if (NumMessages != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumMessages);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProducerId);
      }
      if (SequenceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceId);
      }
      if (NumMessages != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumMessages);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandSend other) {
      if (other == null) {
        return;
      }
      if (other.ProducerId != 0UL) {
        ProducerId = other.ProducerId;
      }
      if (other.SequenceId != 0UL) {
        SequenceId = other.SequenceId;
      }
      if (other.NumMessages != 0) {
        NumMessages = other.NumMessages;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProducerId = input.ReadUInt64();
            break;
          }
          case 16: {
            SequenceId = input.ReadUInt64();
            break;
          }
          case 24: {
            NumMessages = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandSendReceipt : pb::IMessage<CommandSendReceipt> {
    private static readonly pb::MessageParser<CommandSendReceipt> _parser = new pb::MessageParser<CommandSendReceipt>(() => new CommandSendReceipt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandSendReceipt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSendReceipt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSendReceipt(CommandSendReceipt other) : this() {
      producerId_ = other.producerId_;
      sequenceId_ = other.sequenceId_;
      messageId_ = other.messageId_ != null ? other.messageId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSendReceipt Clone() {
      return new CommandSendReceipt(this);
    }

    /// <summary>Field number for the "producer_id" field.</summary>
    public const int ProducerIdFieldNumber = 1;
    private ulong producerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProducerId {
      get { return producerId_; }
      set {
        producerId_ = value;
      }
    }

    /// <summary>Field number for the "sequence_id" field.</summary>
    public const int SequenceIdFieldNumber = 2;
    private ulong sequenceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceId {
      get { return sequenceId_; }
      set {
        sequenceId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private global::Pulsar.Proto.MessageIdData messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.MessageIdData MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandSendReceipt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandSendReceipt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducerId != other.ProducerId) return false;
      if (SequenceId != other.SequenceId) return false;
      if (!object.Equals(MessageId, other.MessageId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducerId != 0UL) hash ^= ProducerId.GetHashCode();
      if (SequenceId != 0UL) hash ^= SequenceId.GetHashCode();
      if (messageId_ != null) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProducerId);
      }
      if (SequenceId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceId);
      }
      if (messageId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProducerId);
      }
      if (SequenceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceId);
      }
      if (messageId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandSendReceipt other) {
      if (other == null) {
        return;
      }
      if (other.ProducerId != 0UL) {
        ProducerId = other.ProducerId;
      }
      if (other.SequenceId != 0UL) {
        SequenceId = other.SequenceId;
      }
      if (other.messageId_ != null) {
        if (messageId_ == null) {
          messageId_ = new global::Pulsar.Proto.MessageIdData();
        }
        MessageId.MergeFrom(other.MessageId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProducerId = input.ReadUInt64();
            break;
          }
          case 16: {
            SequenceId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (messageId_ == null) {
              messageId_ = new global::Pulsar.Proto.MessageIdData();
            }
            input.ReadMessage(messageId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandSendError : pb::IMessage<CommandSendError> {
    private static readonly pb::MessageParser<CommandSendError> _parser = new pb::MessageParser<CommandSendError>(() => new CommandSendError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandSendError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSendError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSendError(CommandSendError other) : this() {
      producerId_ = other.producerId_;
      sequenceId_ = other.sequenceId_;
      error_ = other.error_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSendError Clone() {
      return new CommandSendError(this);
    }

    /// <summary>Field number for the "producer_id" field.</summary>
    public const int ProducerIdFieldNumber = 1;
    private ulong producerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProducerId {
      get { return producerId_; }
      set {
        producerId_ = value;
      }
    }

    /// <summary>Field number for the "sequence_id" field.</summary>
    public const int SequenceIdFieldNumber = 2;
    private ulong sequenceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceId {
      get { return sequenceId_; }
      set {
        sequenceId_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private global::Pulsar.Proto.ServerError error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.ServerError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandSendError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandSendError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducerId != other.ProducerId) return false;
      if (SequenceId != other.SequenceId) return false;
      if (Error != other.Error) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducerId != 0UL) hash ^= ProducerId.GetHashCode();
      if (SequenceId != 0UL) hash ^= SequenceId.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProducerId);
      }
      if (SequenceId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceId);
      }
      if (Error != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Error);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProducerId);
      }
      if (SequenceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceId);
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandSendError other) {
      if (other == null) {
        return;
      }
      if (other.ProducerId != 0UL) {
        ProducerId = other.ProducerId;
      }
      if (other.SequenceId != 0UL) {
        SequenceId = other.SequenceId;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProducerId = input.ReadUInt64();
            break;
          }
          case 16: {
            SequenceId = input.ReadUInt64();
            break;
          }
          case 24: {
            error_ = (global::Pulsar.Proto.ServerError) input.ReadEnum();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandMessage : pb::IMessage<CommandMessage> {
    private static readonly pb::MessageParser<CommandMessage> _parser = new pb::MessageParser<CommandMessage>(() => new CommandMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandMessage(CommandMessage other) : this() {
      consumerId_ = other.consumerId_;
      messageId_ = other.messageId_ != null ? other.messageId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandMessage Clone() {
      return new CommandMessage(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 2;
    private global::Pulsar.Proto.MessageIdData messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.MessageIdData MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (!object.Equals(MessageId, other.MessageId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (messageId_ != null) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (messageId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (messageId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandMessage other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.messageId_ != null) {
        if (messageId_ == null) {
          messageId_ = new global::Pulsar.Proto.MessageIdData();
        }
        MessageId.MergeFrom(other.MessageId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (messageId_ == null) {
              messageId_ = new global::Pulsar.Proto.MessageIdData();
            }
            input.ReadMessage(messageId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandAck : pb::IMessage<CommandAck> {
    private static readonly pb::MessageParser<CommandAck> _parser = new pb::MessageParser<CommandAck>(() => new CommandAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandAck(CommandAck other) : this() {
      consumerId_ = other.consumerId_;
      ackType_ = other.ackType_;
      messageId_ = other.messageId_.Clone();
      validationError_ = other.validationError_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandAck Clone() {
      return new CommandAck(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "ack_type" field.</summary>
    public const int AckTypeFieldNumber = 2;
    private global::Pulsar.Proto.CommandAck.Types.AckType ackType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandAck.Types.AckType AckType {
      get { return ackType_; }
      set {
        ackType_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.MessageIdData> _repeated_messageId_codec
        = pb::FieldCodec.ForMessage(26, global::Pulsar.Proto.MessageIdData.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.MessageIdData> messageId_ = new pbc::RepeatedField<global::Pulsar.Proto.MessageIdData>();
    /// <summary>
    /// In case of individual acks, the client can pass a list of message ids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.MessageIdData> MessageId {
      get { return messageId_; }
    }

    /// <summary>Field number for the "validation_error" field.</summary>
    public const int ValidationErrorFieldNumber = 4;
    private global::Pulsar.Proto.CommandAck.Types.ValidationError validationError_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandAck.Types.ValidationError ValidationError {
      get { return validationError_; }
      set {
        validationError_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.KeyLongValue> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(42, global::Pulsar.Proto.KeyLongValue.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.KeyLongValue> properties_ = new pbc::RepeatedField<global::Pulsar.Proto.KeyLongValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.KeyLongValue> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (AckType != other.AckType) return false;
      if(!messageId_.Equals(other.messageId_)) return false;
      if (ValidationError != other.ValidationError) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (AckType != 0) hash ^= AckType.GetHashCode();
      hash ^= messageId_.GetHashCode();
      if (ValidationError != 0) hash ^= ValidationError.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (AckType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AckType);
      }
      messageId_.WriteTo(output, _repeated_messageId_codec);
      if (ValidationError != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ValidationError);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (AckType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckType);
      }
      size += messageId_.CalculateSize(_repeated_messageId_codec);
      if (ValidationError != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValidationError);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandAck other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.AckType != 0) {
        AckType = other.AckType;
      }
      messageId_.Add(other.messageId_);
      if (other.ValidationError != 0) {
        ValidationError = other.ValidationError;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 16: {
            ackType_ = (global::Pulsar.Proto.CommandAck.Types.AckType) input.ReadEnum();
            break;
          }
          case 26: {
            messageId_.AddEntriesFrom(input, _repeated_messageId_codec);
            break;
          }
          case 32: {
            validationError_ = (global::Pulsar.Proto.CommandAck.Types.ValidationError) input.ReadEnum();
            break;
          }
          case 42: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommandAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AckType {
        [pbr::OriginalName("Individual")] Individual = 0,
        [pbr::OriginalName("Cumulative")] Cumulative = 1,
      }

      /// <summary>
      /// Acks can contain a flag to indicate the consumer
      /// received an invalid message that got discarded
      /// before being passed on to the application.
      /// </summary>
      public enum ValidationError {
        [pbr::OriginalName("UncompressedSizeCorruption")] UncompressedSizeCorruption = 0,
        [pbr::OriginalName("DecompressionError")] DecompressionError = 1,
        [pbr::OriginalName("ChecksumMismatch")] ChecksumMismatch = 2,
        [pbr::OriginalName("BatchDeSerializeError")] BatchDeSerializeError = 3,
        [pbr::OriginalName("DecryptionError")] DecryptionError = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// changes on active consumer
  /// </summary>
  public sealed partial class CommandActiveConsumerChange : pb::IMessage<CommandActiveConsumerChange> {
    private static readonly pb::MessageParser<CommandActiveConsumerChange> _parser = new pb::MessageParser<CommandActiveConsumerChange>(() => new CommandActiveConsumerChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandActiveConsumerChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandActiveConsumerChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandActiveConsumerChange(CommandActiveConsumerChange other) : this() {
      consumerId_ = other.consumerId_;
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandActiveConsumerChange Clone() {
      return new CommandActiveConsumerChange(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 2;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandActiveConsumerChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandActiveConsumerChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (IsActive != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandActiveConsumerChange other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 16: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandFlow : pb::IMessage<CommandFlow> {
    private static readonly pb::MessageParser<CommandFlow> _parser = new pb::MessageParser<CommandFlow>(() => new CommandFlow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandFlow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandFlow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandFlow(CommandFlow other) : this() {
      consumerId_ = other.consumerId_;
      messagePermits_ = other.messagePermits_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandFlow Clone() {
      return new CommandFlow(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "messagePermits" field.</summary>
    public const int MessagePermitsFieldNumber = 2;
    private uint messagePermits_;
    /// <summary>
    /// Max number of messages to prefetch, in addition
    /// of any number previously specified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MessagePermits {
      get { return messagePermits_; }
      set {
        messagePermits_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandFlow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandFlow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (MessagePermits != other.MessagePermits) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (MessagePermits != 0) hash ^= MessagePermits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (MessagePermits != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MessagePermits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (MessagePermits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessagePermits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandFlow other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.MessagePermits != 0) {
        MessagePermits = other.MessagePermits;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 16: {
            MessagePermits = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandUnsubscribe : pb::IMessage<CommandUnsubscribe> {
    private static readonly pb::MessageParser<CommandUnsubscribe> _parser = new pb::MessageParser<CommandUnsubscribe>(() => new CommandUnsubscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandUnsubscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandUnsubscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandUnsubscribe(CommandUnsubscribe other) : this() {
      consumerId_ = other.consumerId_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandUnsubscribe Clone() {
      return new CommandUnsubscribe(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandUnsubscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandUnsubscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandUnsubscribe other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Reset an existing consumer to a particular message id
  /// </summary>
  public sealed partial class CommandSeek : pb::IMessage<CommandSeek> {
    private static readonly pb::MessageParser<CommandSeek> _parser = new pb::MessageParser<CommandSeek>(() => new CommandSeek());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandSeek> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSeek() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSeek(CommandSeek other) : this() {
      consumerId_ = other.consumerId_;
      requestId_ = other.requestId_;
      messageId_ = other.messageId_ != null ? other.messageId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSeek Clone() {
      return new CommandSeek(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 3;
    private global::Pulsar.Proto.MessageIdData messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.MessageIdData MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandSeek);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandSeek other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(MessageId, other.MessageId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (messageId_ != null) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (messageId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (messageId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandSeek other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.messageId_ != null) {
        if (messageId_ == null) {
          messageId_ = new global::Pulsar.Proto.MessageIdData();
        }
        MessageId.MergeFrom(other.MessageId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (messageId_ == null) {
              messageId_ = new global::Pulsar.Proto.MessageIdData();
            }
            input.ReadMessage(messageId_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Message sent by broker to client when a topic
  /// has been forcefully terminated and there are no more
  /// messages left to consume
  /// </summary>
  public sealed partial class CommandReachedEndOfTopic : pb::IMessage<CommandReachedEndOfTopic> {
    private static readonly pb::MessageParser<CommandReachedEndOfTopic> _parser = new pb::MessageParser<CommandReachedEndOfTopic>(() => new CommandReachedEndOfTopic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandReachedEndOfTopic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandReachedEndOfTopic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandReachedEndOfTopic(CommandReachedEndOfTopic other) : this() {
      consumerId_ = other.consumerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandReachedEndOfTopic Clone() {
      return new CommandReachedEndOfTopic(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandReachedEndOfTopic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandReachedEndOfTopic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandReachedEndOfTopic other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandCloseProducer : pb::IMessage<CommandCloseProducer> {
    private static readonly pb::MessageParser<CommandCloseProducer> _parser = new pb::MessageParser<CommandCloseProducer>(() => new CommandCloseProducer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandCloseProducer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandCloseProducer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandCloseProducer(CommandCloseProducer other) : this() {
      producerId_ = other.producerId_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandCloseProducer Clone() {
      return new CommandCloseProducer(this);
    }

    /// <summary>Field number for the "producer_id" field.</summary>
    public const int ProducerIdFieldNumber = 1;
    private ulong producerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ProducerId {
      get { return producerId_; }
      set {
        producerId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandCloseProducer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandCloseProducer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProducerId != other.ProducerId) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProducerId != 0UL) hash ^= ProducerId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProducerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ProducerId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProducerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ProducerId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandCloseProducer other) {
      if (other == null) {
        return;
      }
      if (other.ProducerId != 0UL) {
        ProducerId = other.ProducerId;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProducerId = input.ReadUInt64();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandCloseConsumer : pb::IMessage<CommandCloseConsumer> {
    private static readonly pb::MessageParser<CommandCloseConsumer> _parser = new pb::MessageParser<CommandCloseConsumer>(() => new CommandCloseConsumer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandCloseConsumer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandCloseConsumer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandCloseConsumer(CommandCloseConsumer other) : this() {
      consumerId_ = other.consumerId_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandCloseConsumer Clone() {
      return new CommandCloseConsumer(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandCloseConsumer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandCloseConsumer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandCloseConsumer other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandRedeliverUnacknowledgedMessages : pb::IMessage<CommandRedeliverUnacknowledgedMessages> {
    private static readonly pb::MessageParser<CommandRedeliverUnacknowledgedMessages> _parser = new pb::MessageParser<CommandRedeliverUnacknowledgedMessages>(() => new CommandRedeliverUnacknowledgedMessages());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandRedeliverUnacknowledgedMessages> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandRedeliverUnacknowledgedMessages() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandRedeliverUnacknowledgedMessages(CommandRedeliverUnacknowledgedMessages other) : this() {
      consumerId_ = other.consumerId_;
      messageIds_ = other.messageIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandRedeliverUnacknowledgedMessages Clone() {
      return new CommandRedeliverUnacknowledgedMessages(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "message_ids" field.</summary>
    public const int MessageIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pulsar.Proto.MessageIdData> _repeated_messageIds_codec
        = pb::FieldCodec.ForMessage(18, global::Pulsar.Proto.MessageIdData.Parser);
    private readonly pbc::RepeatedField<global::Pulsar.Proto.MessageIdData> messageIds_ = new pbc::RepeatedField<global::Pulsar.Proto.MessageIdData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pulsar.Proto.MessageIdData> MessageIds {
      get { return messageIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandRedeliverUnacknowledgedMessages);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandRedeliverUnacknowledgedMessages other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if(!messageIds_.Equals(other.messageIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      hash ^= messageIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      messageIds_.WriteTo(output, _repeated_messageIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      size += messageIds_.CalculateSize(_repeated_messageIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandRedeliverUnacknowledgedMessages other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      messageIds_.Add(other.messageIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 18: {
            messageIds_.AddEntriesFrom(input, _repeated_messageIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandSuccess : pb::IMessage<CommandSuccess> {
    private static readonly pb::MessageParser<CommandSuccess> _parser = new pb::MessageParser<CommandSuccess>(() => new CommandSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSuccess(CommandSuccess other) : this() {
      requestId_ = other.requestId_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandSuccess Clone() {
      return new CommandSuccess(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    private global::Pulsar.Proto.Schema schema_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (schema_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandSuccess other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          schema_ = new global::Pulsar.Proto.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (schema_ == null) {
              schema_ = new global::Pulsar.Proto.Schema();
            }
            input.ReadMessage(schema_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Response from CommandProducer
  /// </summary>
  public sealed partial class CommandProducerSuccess : pb::IMessage<CommandProducerSuccess> {
    private static readonly pb::MessageParser<CommandProducerSuccess> _parser = new pb::MessageParser<CommandProducerSuccess>(() => new CommandProducerSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandProducerSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandProducerSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandProducerSuccess(CommandProducerSuccess other) : this() {
      requestId_ = other.requestId_;
      producerName_ = other.producerName_;
      lastSequenceId_ = other.lastSequenceId_;
      schemaVersion_ = other.schemaVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandProducerSuccess Clone() {
      return new CommandProducerSuccess(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "producer_name" field.</summary>
    public const int ProducerNameFieldNumber = 2;
    private string producerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducerName {
      get { return producerName_; }
      set {
        producerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_sequence_id" field.</summary>
    public const int LastSequenceIdFieldNumber = 3;
    private long lastSequenceId_;
    /// <summary>
    /// The last sequence id that was stored by this producer in the previous session
    /// This will only be meaningful if deduplication has been enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastSequenceId {
      get { return lastSequenceId_; }
      set {
        lastSequenceId_ = value;
      }
    }

    /// <summary>Field number for the "schema_version" field.</summary>
    public const int SchemaVersionFieldNumber = 4;
    private pb::ByteString schemaVersion_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SchemaVersion {
      get { return schemaVersion_; }
      set {
        schemaVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandProducerSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandProducerSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ProducerName != other.ProducerName) return false;
      if (LastSequenceId != other.LastSequenceId) return false;
      if (SchemaVersion != other.SchemaVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (ProducerName.Length != 0) hash ^= ProducerName.GetHashCode();
      if (LastSequenceId != 0L) hash ^= LastSequenceId.GetHashCode();
      if (SchemaVersion.Length != 0) hash ^= SchemaVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (ProducerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProducerName);
      }
      if (LastSequenceId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastSequenceId);
      }
      if (SchemaVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(SchemaVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (ProducerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducerName);
      }
      if (LastSequenceId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastSequenceId);
      }
      if (SchemaVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SchemaVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandProducerSuccess other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.ProducerName.Length != 0) {
        ProducerName = other.ProducerName;
      }
      if (other.LastSequenceId != 0L) {
        LastSequenceId = other.LastSequenceId;
      }
      if (other.SchemaVersion.Length != 0) {
        SchemaVersion = other.SchemaVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 18: {
            ProducerName = input.ReadString();
            break;
          }
          case 24: {
            LastSequenceId = input.ReadInt64();
            break;
          }
          case 34: {
            SchemaVersion = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandError : pb::IMessage<CommandError> {
    private static readonly pb::MessageParser<CommandError> _parser = new pb::MessageParser<CommandError>(() => new CommandError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandError(CommandError other) : this() {
      requestId_ = other.requestId_;
      error_ = other.error_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandError Clone() {
      return new CommandError(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Pulsar.Proto.ServerError error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.ServerError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (Error != other.Error) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (Error != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Error);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandError other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 16: {
            error_ = (global::Pulsar.Proto.ServerError) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Commands to probe the state of connection.
  /// When either client or broker doesn't receive commands for certain
  /// amount of time, they will send a Ping probe.
  /// </summary>
  public sealed partial class CommandPing : pb::IMessage<CommandPing> {
    private static readonly pb::MessageParser<CommandPing> _parser = new pb::MessageParser<CommandPing>(() => new CommandPing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandPing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPing(CommandPing other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPing Clone() {
      return new CommandPing(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandPing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandPing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandPing other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CommandPong : pb::IMessage<CommandPong> {
    private static readonly pb::MessageParser<CommandPong> _parser = new pb::MessageParser<CommandPong>(() => new CommandPong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandPong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPong(CommandPong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandPong Clone() {
      return new CommandPong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandPong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandPong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandPong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CommandConsumerStats : pb::IMessage<CommandConsumerStats> {
    private static readonly pb::MessageParser<CommandConsumerStats> _parser = new pb::MessageParser<CommandConsumerStats>(() => new CommandConsumerStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandConsumerStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConsumerStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConsumerStats(CommandConsumerStats other) : this() {
      requestId_ = other.requestId_;
      consumerId_ = other.consumerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConsumerStats Clone() {
      return new CommandConsumerStats(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 4;
    private ulong consumerId_;
    /// <summary>
    /// string topic_name         = 2;
    /// string subscription_name  = 3;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandConsumerStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandConsumerStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ConsumerId != other.ConsumerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (ConsumerId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ConsumerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandConsumerStats other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 32: {
            ConsumerId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandConsumerStatsResponse : pb::IMessage<CommandConsumerStatsResponse> {
    private static readonly pb::MessageParser<CommandConsumerStatsResponse> _parser = new pb::MessageParser<CommandConsumerStatsResponse>(() => new CommandConsumerStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandConsumerStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConsumerStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConsumerStatsResponse(CommandConsumerStatsResponse other) : this() {
      requestId_ = other.requestId_;
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      msgRateOut_ = other.msgRateOut_;
      msgThroughputOut_ = other.msgThroughputOut_;
      msgRateRedeliver_ = other.msgRateRedeliver_;
      consumerName_ = other.consumerName_;
      availablePermits_ = other.availablePermits_;
      unackedMessages_ = other.unackedMessages_;
      blockedConsumerOnUnackedMsgs_ = other.blockedConsumerOnUnackedMsgs_;
      address_ = other.address_;
      connectedSince_ = other.connectedSince_;
      type_ = other.type_;
      msgRateExpired_ = other.msgRateExpired_;
      msgBacklog_ = other.msgBacklog_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandConsumerStatsResponse Clone() {
      return new CommandConsumerStatsResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private global::Pulsar.Proto.ServerError errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.ServerError ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msgRateOut" field.</summary>
    public const int MsgRateOutFieldNumber = 4;
    private double msgRateOut_;
    /// <summary>
    //// Total rate of messages delivered to the consumer. msg/s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MsgRateOut {
      get { return msgRateOut_; }
      set {
        msgRateOut_ = value;
      }
    }

    /// <summary>Field number for the "msgThroughputOut" field.</summary>
    public const int MsgThroughputOutFieldNumber = 5;
    private double msgThroughputOut_;
    /// <summary>
    //// Total throughput delivered to the consumer. bytes/s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MsgThroughputOut {
      get { return msgThroughputOut_; }
      set {
        msgThroughputOut_ = value;
      }
    }

    /// <summary>Field number for the "msgRateRedeliver" field.</summary>
    public const int MsgRateRedeliverFieldNumber = 6;
    private double msgRateRedeliver_;
    /// <summary>
    //// Total rate of messages redelivered by this consumer. msg/s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MsgRateRedeliver {
      get { return msgRateRedeliver_; }
      set {
        msgRateRedeliver_ = value;
      }
    }

    /// <summary>Field number for the "consumerName" field.</summary>
    public const int ConsumerNameFieldNumber = 7;
    private string consumerName_ = "";
    /// <summary>
    //// Name of the consumer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConsumerName {
      get { return consumerName_; }
      set {
        consumerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "availablePermits" field.</summary>
    public const int AvailablePermitsFieldNumber = 8;
    private ulong availablePermits_;
    /// <summary>
    //// Number of available message permits for the consumer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AvailablePermits {
      get { return availablePermits_; }
      set {
        availablePermits_ = value;
      }
    }

    /// <summary>Field number for the "unackedMessages" field.</summary>
    public const int UnackedMessagesFieldNumber = 9;
    private ulong unackedMessages_;
    /// <summary>
    //// Number of unacknowledged messages for the consumer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UnackedMessages {
      get { return unackedMessages_; }
      set {
        unackedMessages_ = value;
      }
    }

    /// <summary>Field number for the "blockedConsumerOnUnackedMsgs" field.</summary>
    public const int BlockedConsumerOnUnackedMsgsFieldNumber = 10;
    private bool blockedConsumerOnUnackedMsgs_;
    /// <summary>
    //// Flag to verify if consumer is blocked due to reaching threshold of unacked messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BlockedConsumerOnUnackedMsgs {
      get { return blockedConsumerOnUnackedMsgs_; }
      set {
        blockedConsumerOnUnackedMsgs_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 11;
    private string address_ = "";
    /// <summary>
    //// Address of this consumer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connectedSince" field.</summary>
    public const int ConnectedSinceFieldNumber = 12;
    private string connectedSince_ = "";
    /// <summary>
    //// Timestamp of connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectedSince {
      get { return connectedSince_; }
      set {
        connectedSince_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 13;
    private string type_ = "";
    /// <summary>
    //// Whether this subscription is Exclusive or Shared or Failover
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msgRateExpired" field.</summary>
    public const int MsgRateExpiredFieldNumber = 14;
    private double msgRateExpired_;
    /// <summary>
    //// Total rate of messages expired on this subscription. msg/s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MsgRateExpired {
      get { return msgRateExpired_; }
      set {
        msgRateExpired_ = value;
      }
    }

    /// <summary>Field number for the "msgBacklog" field.</summary>
    public const int MsgBacklogFieldNumber = 15;
    private ulong msgBacklog_;
    /// <summary>
    //// Number of messages in the subscription backlog
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MsgBacklog {
      get { return msgBacklog_; }
      set {
        msgBacklog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandConsumerStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandConsumerStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MsgRateOut, other.MsgRateOut)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MsgThroughputOut, other.MsgThroughputOut)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MsgRateRedeliver, other.MsgRateRedeliver)) return false;
      if (ConsumerName != other.ConsumerName) return false;
      if (AvailablePermits != other.AvailablePermits) return false;
      if (UnackedMessages != other.UnackedMessages) return false;
      if (BlockedConsumerOnUnackedMsgs != other.BlockedConsumerOnUnackedMsgs) return false;
      if (Address != other.Address) return false;
      if (ConnectedSince != other.ConnectedSince) return false;
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MsgRateExpired, other.MsgRateExpired)) return false;
      if (MsgBacklog != other.MsgBacklog) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (MsgRateOut != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MsgRateOut);
      if (MsgThroughputOut != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MsgThroughputOut);
      if (MsgRateRedeliver != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MsgRateRedeliver);
      if (ConsumerName.Length != 0) hash ^= ConsumerName.GetHashCode();
      if (AvailablePermits != 0UL) hash ^= AvailablePermits.GetHashCode();
      if (UnackedMessages != 0UL) hash ^= UnackedMessages.GetHashCode();
      if (BlockedConsumerOnUnackedMsgs != false) hash ^= BlockedConsumerOnUnackedMsgs.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (ConnectedSince.Length != 0) hash ^= ConnectedSince.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (MsgRateExpired != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MsgRateExpired);
      if (MsgBacklog != 0UL) hash ^= MsgBacklog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (MsgRateOut != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MsgRateOut);
      }
      if (MsgThroughputOut != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MsgThroughputOut);
      }
      if (MsgRateRedeliver != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(MsgRateRedeliver);
      }
      if (ConsumerName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ConsumerName);
      }
      if (AvailablePermits != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(AvailablePermits);
      }
      if (UnackedMessages != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(UnackedMessages);
      }
      if (BlockedConsumerOnUnackedMsgs != false) {
        output.WriteRawTag(80);
        output.WriteBool(BlockedConsumerOnUnackedMsgs);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Address);
      }
      if (ConnectedSince.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ConnectedSince);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Type);
      }
      if (MsgRateExpired != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(MsgRateExpired);
      }
      if (MsgBacklog != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(MsgBacklog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (MsgRateOut != 0D) {
        size += 1 + 8;
      }
      if (MsgThroughputOut != 0D) {
        size += 1 + 8;
      }
      if (MsgRateRedeliver != 0D) {
        size += 1 + 8;
      }
      if (ConsumerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConsumerName);
      }
      if (AvailablePermits != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AvailablePermits);
      }
      if (UnackedMessages != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnackedMessages);
      }
      if (BlockedConsumerOnUnackedMsgs != false) {
        size += 1 + 1;
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (ConnectedSince.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectedSince);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (MsgRateExpired != 0D) {
        size += 1 + 8;
      }
      if (MsgBacklog != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MsgBacklog);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandConsumerStatsResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.MsgRateOut != 0D) {
        MsgRateOut = other.MsgRateOut;
      }
      if (other.MsgThroughputOut != 0D) {
        MsgThroughputOut = other.MsgThroughputOut;
      }
      if (other.MsgRateRedeliver != 0D) {
        MsgRateRedeliver = other.MsgRateRedeliver;
      }
      if (other.ConsumerName.Length != 0) {
        ConsumerName = other.ConsumerName;
      }
      if (other.AvailablePermits != 0UL) {
        AvailablePermits = other.AvailablePermits;
      }
      if (other.UnackedMessages != 0UL) {
        UnackedMessages = other.UnackedMessages;
      }
      if (other.BlockedConsumerOnUnackedMsgs != false) {
        BlockedConsumerOnUnackedMsgs = other.BlockedConsumerOnUnackedMsgs;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.ConnectedSince.Length != 0) {
        ConnectedSince = other.ConnectedSince;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.MsgRateExpired != 0D) {
        MsgRateExpired = other.MsgRateExpired;
      }
      if (other.MsgBacklog != 0UL) {
        MsgBacklog = other.MsgBacklog;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 16: {
            errorCode_ = (global::Pulsar.Proto.ServerError) input.ReadEnum();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 33: {
            MsgRateOut = input.ReadDouble();
            break;
          }
          case 41: {
            MsgThroughputOut = input.ReadDouble();
            break;
          }
          case 49: {
            MsgRateRedeliver = input.ReadDouble();
            break;
          }
          case 58: {
            ConsumerName = input.ReadString();
            break;
          }
          case 64: {
            AvailablePermits = input.ReadUInt64();
            break;
          }
          case 72: {
            UnackedMessages = input.ReadUInt64();
            break;
          }
          case 80: {
            BlockedConsumerOnUnackedMsgs = input.ReadBool();
            break;
          }
          case 90: {
            Address = input.ReadString();
            break;
          }
          case 98: {
            ConnectedSince = input.ReadString();
            break;
          }
          case 106: {
            Type = input.ReadString();
            break;
          }
          case 113: {
            MsgRateExpired = input.ReadDouble();
            break;
          }
          case 120: {
            MsgBacklog = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandGetLastMessageId : pb::IMessage<CommandGetLastMessageId> {
    private static readonly pb::MessageParser<CommandGetLastMessageId> _parser = new pb::MessageParser<CommandGetLastMessageId>(() => new CommandGetLastMessageId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandGetLastMessageId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetLastMessageId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetLastMessageId(CommandGetLastMessageId other) : this() {
      consumerId_ = other.consumerId_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetLastMessageId Clone() {
      return new CommandGetLastMessageId(this);
    }

    /// <summary>Field number for the "consumer_id" field.</summary>
    public const int ConsumerIdFieldNumber = 1;
    private ulong consumerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConsumerId {
      get { return consumerId_; }
      set {
        consumerId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandGetLastMessageId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandGetLastMessageId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumerId != other.ConsumerId) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumerId != 0UL) hash ^= ConsumerId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsumerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConsumerId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConsumerId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandGetLastMessageId other) {
      if (other == null) {
        return;
      }
      if (other.ConsumerId != 0UL) {
        ConsumerId = other.ConsumerId;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumerId = input.ReadUInt64();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandGetLastMessageIdResponse : pb::IMessage<CommandGetLastMessageIdResponse> {
    private static readonly pb::MessageParser<CommandGetLastMessageIdResponse> _parser = new pb::MessageParser<CommandGetLastMessageIdResponse>(() => new CommandGetLastMessageIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandGetLastMessageIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetLastMessageIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetLastMessageIdResponse(CommandGetLastMessageIdResponse other) : this() {
      lastMessageId_ = other.lastMessageId_ != null ? other.lastMessageId_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetLastMessageIdResponse Clone() {
      return new CommandGetLastMessageIdResponse(this);
    }

    /// <summary>Field number for the "last_message_id" field.</summary>
    public const int LastMessageIdFieldNumber = 1;
    private global::Pulsar.Proto.MessageIdData lastMessageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.MessageIdData LastMessageId {
      get { return lastMessageId_; }
      set {
        lastMessageId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandGetLastMessageIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandGetLastMessageIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastMessageId, other.LastMessageId)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lastMessageId_ != null) hash ^= LastMessageId.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lastMessageId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastMessageId);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lastMessageId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastMessageId);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandGetLastMessageIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.lastMessageId_ != null) {
        if (lastMessageId_ == null) {
          lastMessageId_ = new global::Pulsar.Proto.MessageIdData();
        }
        LastMessageId.MergeFrom(other.LastMessageId);
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lastMessageId_ == null) {
              lastMessageId_ = new global::Pulsar.Proto.MessageIdData();
            }
            input.ReadMessage(lastMessageId_);
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandGetTopicsOfNamespace : pb::IMessage<CommandGetTopicsOfNamespace> {
    private static readonly pb::MessageParser<CommandGetTopicsOfNamespace> _parser = new pb::MessageParser<CommandGetTopicsOfNamespace>(() => new CommandGetTopicsOfNamespace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandGetTopicsOfNamespace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetTopicsOfNamespace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetTopicsOfNamespace(CommandGetTopicsOfNamespace other) : this() {
      requestId_ = other.requestId_;
      namespace_ = other.namespace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetTopicsOfNamespace Clone() {
      return new CommandGetTopicsOfNamespace(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 2;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandGetTopicsOfNamespace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandGetTopicsOfNamespace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (Namespace != other.Namespace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Namespace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandGetTopicsOfNamespace other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 18: {
            Namespace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandGetTopicsOfNamespaceResponse : pb::IMessage<CommandGetTopicsOfNamespaceResponse> {
    private static readonly pb::MessageParser<CommandGetTopicsOfNamespaceResponse> _parser = new pb::MessageParser<CommandGetTopicsOfNamespaceResponse>(() => new CommandGetTopicsOfNamespaceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandGetTopicsOfNamespaceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetTopicsOfNamespaceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetTopicsOfNamespaceResponse(CommandGetTopicsOfNamespaceResponse other) : this() {
      requestId_ = other.requestId_;
      topics_ = other.topics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetTopicsOfNamespaceResponse Clone() {
      return new CommandGetTopicsOfNamespaceResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "topics" field.</summary>
    public const int TopicsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_topics_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> topics_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Topics {
      get { return topics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandGetTopicsOfNamespaceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandGetTopicsOfNamespaceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if(!topics_.Equals(other.topics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      hash ^= topics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      topics_.WriteTo(output, _repeated_topics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      size += topics_.CalculateSize(_repeated_topics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandGetTopicsOfNamespaceResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      topics_.Add(other.topics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 18: {
            topics_.AddEntriesFrom(input, _repeated_topics_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandGetSchema : pb::IMessage<CommandGetSchema> {
    private static readonly pb::MessageParser<CommandGetSchema> _parser = new pb::MessageParser<CommandGetSchema>(() => new CommandGetSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandGetSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetSchema(CommandGetSchema other) : this() {
      requestId_ = other.requestId_;
      topic_ = other.topic_;
      schemaVersion_ = other.schemaVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetSchema Clone() {
      return new CommandGetSchema(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema_version" field.</summary>
    public const int SchemaVersionFieldNumber = 3;
    private pb::ByteString schemaVersion_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SchemaVersion {
      get { return schemaVersion_; }
      set {
        schemaVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandGetSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandGetSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (Topic != other.Topic) return false;
      if (SchemaVersion != other.SchemaVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (SchemaVersion.Length != 0) hash ^= SchemaVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      if (SchemaVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SchemaVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (SchemaVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SchemaVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandGetSchema other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.SchemaVersion.Length != 0) {
        SchemaVersion = other.SchemaVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            SchemaVersion = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommandGetSchemaResponse : pb::IMessage<CommandGetSchemaResponse> {
    private static readonly pb::MessageParser<CommandGetSchemaResponse> _parser = new pb::MessageParser<CommandGetSchemaResponse>(() => new CommandGetSchemaResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandGetSchemaResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetSchemaResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetSchemaResponse(CommandGetSchemaResponse other) : this() {
      requestId_ = other.requestId_;
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      schemaVersion_ = other.schemaVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandGetSchemaResponse Clone() {
      return new CommandGetSchemaResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private ulong requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private global::Pulsar.Proto.ServerError errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.ServerError ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 4;
    private global::Pulsar.Proto.Schema schema_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "schema_version" field.</summary>
    public const int SchemaVersionFieldNumber = 5;
    private pb::ByteString schemaVersion_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SchemaVersion {
      get { return schemaVersion_; }
      set {
        schemaVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandGetSchemaResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandGetSchemaResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (SchemaVersion != other.SchemaVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (SchemaVersion.Length != 0) hash ^= SchemaVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RequestId);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (schema_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Schema);
      }
      if (SchemaVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(SchemaVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (SchemaVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SchemaVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandGetSchemaResponse other) {
      if (other == null) {
        return;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          schema_ = new global::Pulsar.Proto.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.SchemaVersion.Length != 0) {
        SchemaVersion = other.SchemaVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 16: {
            errorCode_ = (global::Pulsar.Proto.ServerError) input.ReadEnum();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 34: {
            if (schema_ == null) {
              schema_ = new global::Pulsar.Proto.Schema();
            }
            input.ReadMessage(schema_);
            break;
          }
          case 42: {
            SchemaVersion = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BaseCommand : pb::IMessage<BaseCommand> {
    private static readonly pb::MessageParser<BaseCommand> _parser = new pb::MessageParser<BaseCommand>(() => new BaseCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BaseCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pulsar.Proto.PulsarApiReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseCommand(BaseCommand other) : this() {
      type_ = other.type_;
      connect_ = other.connect_ != null ? other.connect_.Clone() : null;
      connected_ = other.connected_ != null ? other.connected_.Clone() : null;
      subscribe_ = other.subscribe_ != null ? other.subscribe_.Clone() : null;
      producer_ = other.producer_ != null ? other.producer_.Clone() : null;
      send_ = other.send_ != null ? other.send_.Clone() : null;
      sendReceipt_ = other.sendReceipt_ != null ? other.sendReceipt_.Clone() : null;
      sendError_ = other.sendError_ != null ? other.sendError_.Clone() : null;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      ack_ = other.ack_ != null ? other.ack_.Clone() : null;
      flow_ = other.flow_ != null ? other.flow_.Clone() : null;
      unsubscribe_ = other.unsubscribe_ != null ? other.unsubscribe_.Clone() : null;
      success_ = other.success_ != null ? other.success_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      closeProducer_ = other.closeProducer_ != null ? other.closeProducer_.Clone() : null;
      closeConsumer_ = other.closeConsumer_ != null ? other.closeConsumer_.Clone() : null;
      producerSuccess_ = other.producerSuccess_ != null ? other.producerSuccess_.Clone() : null;
      ping_ = other.ping_ != null ? other.ping_.Clone() : null;
      pong_ = other.pong_ != null ? other.pong_.Clone() : null;
      redeliverUnacknowledgedMessages_ = other.redeliverUnacknowledgedMessages_ != null ? other.redeliverUnacknowledgedMessages_.Clone() : null;
      partitionMetadata_ = other.partitionMetadata_ != null ? other.partitionMetadata_.Clone() : null;
      partitionMetadataResponse_ = other.partitionMetadataResponse_ != null ? other.partitionMetadataResponse_.Clone() : null;
      lookupTopic_ = other.lookupTopic_ != null ? other.lookupTopic_.Clone() : null;
      lookupTopicResponse_ = other.lookupTopicResponse_ != null ? other.lookupTopicResponse_.Clone() : null;
      consumerStats_ = other.consumerStats_ != null ? other.consumerStats_.Clone() : null;
      consumerStatsResponse_ = other.consumerStatsResponse_ != null ? other.consumerStatsResponse_.Clone() : null;
      reachedEndOfTopic_ = other.reachedEndOfTopic_ != null ? other.reachedEndOfTopic_.Clone() : null;
      seek_ = other.seek_ != null ? other.seek_.Clone() : null;
      getLastMessageId_ = other.getLastMessageId_ != null ? other.getLastMessageId_.Clone() : null;
      getLastMessageIdResponse_ = other.getLastMessageIdResponse_ != null ? other.getLastMessageIdResponse_.Clone() : null;
      activeConsumerChange_ = other.activeConsumerChange_ != null ? other.activeConsumerChange_.Clone() : null;
      getTopicsOfNamespace_ = other.getTopicsOfNamespace_ != null ? other.getTopicsOfNamespace_.Clone() : null;
      getTopicsOfNamespaceResponse_ = other.getTopicsOfNamespaceResponse_ != null ? other.getTopicsOfNamespaceResponse_.Clone() : null;
      getSchema_ = other.getSchema_ != null ? other.getSchema_.Clone() : null;
      getSchemaResponse_ = other.getSchemaResponse_ != null ? other.getSchemaResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseCommand Clone() {
      return new BaseCommand(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Pulsar.Proto.BaseCommand.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.BaseCommand.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "connect" field.</summary>
    public const int ConnectFieldNumber = 2;
    private global::Pulsar.Proto.CommandConnect connect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandConnect Connect {
      get { return connect_; }
      set {
        connect_ = value;
      }
    }

    /// <summary>Field number for the "connected" field.</summary>
    public const int ConnectedFieldNumber = 3;
    private global::Pulsar.Proto.CommandConnected connected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandConnected Connected {
      get { return connected_; }
      set {
        connected_ = value;
      }
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 4;
    private global::Pulsar.Proto.CommandSubscribe subscribe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSubscribe Subscribe {
      get { return subscribe_; }
      set {
        subscribe_ = value;
      }
    }

    /// <summary>Field number for the "producer" field.</summary>
    public const int ProducerFieldNumber = 5;
    private global::Pulsar.Proto.CommandProducer producer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandProducer Producer {
      get { return producer_; }
      set {
        producer_ = value;
      }
    }

    /// <summary>Field number for the "send" field.</summary>
    public const int SendFieldNumber = 6;
    private global::Pulsar.Proto.CommandSend send_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSend Send {
      get { return send_; }
      set {
        send_ = value;
      }
    }

    /// <summary>Field number for the "send_receipt" field.</summary>
    public const int SendReceiptFieldNumber = 7;
    private global::Pulsar.Proto.CommandSendReceipt sendReceipt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSendReceipt SendReceipt {
      get { return sendReceipt_; }
      set {
        sendReceipt_ = value;
      }
    }

    /// <summary>Field number for the "send_error" field.</summary>
    public const int SendErrorFieldNumber = 8;
    private global::Pulsar.Proto.CommandSendError sendError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSendError SendError {
      get { return sendError_; }
      set {
        sendError_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 9;
    private global::Pulsar.Proto.CommandMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 10;
    private global::Pulsar.Proto.CommandAck ack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandAck Ack {
      get { return ack_; }
      set {
        ack_ = value;
      }
    }

    /// <summary>Field number for the "flow" field.</summary>
    public const int FlowFieldNumber = 11;
    private global::Pulsar.Proto.CommandFlow flow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandFlow Flow {
      get { return flow_; }
      set {
        flow_ = value;
      }
    }

    /// <summary>Field number for the "unsubscribe" field.</summary>
    public const int UnsubscribeFieldNumber = 12;
    private global::Pulsar.Proto.CommandUnsubscribe unsubscribe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandUnsubscribe Unsubscribe {
      get { return unsubscribe_; }
      set {
        unsubscribe_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 13;
    private global::Pulsar.Proto.CommandSuccess success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSuccess Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 14;
    private global::Pulsar.Proto.CommandError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "close_producer" field.</summary>
    public const int CloseProducerFieldNumber = 15;
    private global::Pulsar.Proto.CommandCloseProducer closeProducer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandCloseProducer CloseProducer {
      get { return closeProducer_; }
      set {
        closeProducer_ = value;
      }
    }

    /// <summary>Field number for the "close_consumer" field.</summary>
    public const int CloseConsumerFieldNumber = 16;
    private global::Pulsar.Proto.CommandCloseConsumer closeConsumer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandCloseConsumer CloseConsumer {
      get { return closeConsumer_; }
      set {
        closeConsumer_ = value;
      }
    }

    /// <summary>Field number for the "producer_success" field.</summary>
    public const int ProducerSuccessFieldNumber = 17;
    private global::Pulsar.Proto.CommandProducerSuccess producerSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandProducerSuccess ProducerSuccess {
      get { return producerSuccess_; }
      set {
        producerSuccess_ = value;
      }
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 18;
    private global::Pulsar.Proto.CommandPing ping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandPing Ping {
      get { return ping_; }
      set {
        ping_ = value;
      }
    }

    /// <summary>Field number for the "pong" field.</summary>
    public const int PongFieldNumber = 19;
    private global::Pulsar.Proto.CommandPong pong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandPong Pong {
      get { return pong_; }
      set {
        pong_ = value;
      }
    }

    /// <summary>Field number for the "redeliverUnacknowledgedMessages" field.</summary>
    public const int RedeliverUnacknowledgedMessagesFieldNumber = 20;
    private global::Pulsar.Proto.CommandRedeliverUnacknowledgedMessages redeliverUnacknowledgedMessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandRedeliverUnacknowledgedMessages RedeliverUnacknowledgedMessages {
      get { return redeliverUnacknowledgedMessages_; }
      set {
        redeliverUnacknowledgedMessages_ = value;
      }
    }

    /// <summary>Field number for the "partitionMetadata" field.</summary>
    public const int PartitionMetadataFieldNumber = 21;
    private global::Pulsar.Proto.CommandPartitionedTopicMetadata partitionMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandPartitionedTopicMetadata PartitionMetadata {
      get { return partitionMetadata_; }
      set {
        partitionMetadata_ = value;
      }
    }

    /// <summary>Field number for the "partitionMetadataResponse" field.</summary>
    public const int PartitionMetadataResponseFieldNumber = 22;
    private global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse partitionMetadataResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse PartitionMetadataResponse {
      get { return partitionMetadataResponse_; }
      set {
        partitionMetadataResponse_ = value;
      }
    }

    /// <summary>Field number for the "lookupTopic" field.</summary>
    public const int LookupTopicFieldNumber = 23;
    private global::Pulsar.Proto.CommandLookupTopic lookupTopic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandLookupTopic LookupTopic {
      get { return lookupTopic_; }
      set {
        lookupTopic_ = value;
      }
    }

    /// <summary>Field number for the "lookupTopicResponse" field.</summary>
    public const int LookupTopicResponseFieldNumber = 24;
    private global::Pulsar.Proto.CommandLookupTopicResponse lookupTopicResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandLookupTopicResponse LookupTopicResponse {
      get { return lookupTopicResponse_; }
      set {
        lookupTopicResponse_ = value;
      }
    }

    /// <summary>Field number for the "consumerStats" field.</summary>
    public const int ConsumerStatsFieldNumber = 25;
    private global::Pulsar.Proto.CommandConsumerStats consumerStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandConsumerStats ConsumerStats {
      get { return consumerStats_; }
      set {
        consumerStats_ = value;
      }
    }

    /// <summary>Field number for the "consumerStatsResponse" field.</summary>
    public const int ConsumerStatsResponseFieldNumber = 26;
    private global::Pulsar.Proto.CommandConsumerStatsResponse consumerStatsResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandConsumerStatsResponse ConsumerStatsResponse {
      get { return consumerStatsResponse_; }
      set {
        consumerStatsResponse_ = value;
      }
    }

    /// <summary>Field number for the "reachedEndOfTopic" field.</summary>
    public const int ReachedEndOfTopicFieldNumber = 27;
    private global::Pulsar.Proto.CommandReachedEndOfTopic reachedEndOfTopic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandReachedEndOfTopic ReachedEndOfTopic {
      get { return reachedEndOfTopic_; }
      set {
        reachedEndOfTopic_ = value;
      }
    }

    /// <summary>Field number for the "seek" field.</summary>
    public const int SeekFieldNumber = 28;
    private global::Pulsar.Proto.CommandSeek seek_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandSeek Seek {
      get { return seek_; }
      set {
        seek_ = value;
      }
    }

    /// <summary>Field number for the "getLastMessageId" field.</summary>
    public const int GetLastMessageIdFieldNumber = 29;
    private global::Pulsar.Proto.CommandGetLastMessageId getLastMessageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandGetLastMessageId GetLastMessageId {
      get { return getLastMessageId_; }
      set {
        getLastMessageId_ = value;
      }
    }

    /// <summary>Field number for the "getLastMessageIdResponse" field.</summary>
    public const int GetLastMessageIdResponseFieldNumber = 30;
    private global::Pulsar.Proto.CommandGetLastMessageIdResponse getLastMessageIdResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandGetLastMessageIdResponse GetLastMessageIdResponse {
      get { return getLastMessageIdResponse_; }
      set {
        getLastMessageIdResponse_ = value;
      }
    }

    /// <summary>Field number for the "active_consumer_change" field.</summary>
    public const int ActiveConsumerChangeFieldNumber = 31;
    private global::Pulsar.Proto.CommandActiveConsumerChange activeConsumerChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandActiveConsumerChange ActiveConsumerChange {
      get { return activeConsumerChange_; }
      set {
        activeConsumerChange_ = value;
      }
    }

    /// <summary>Field number for the "getTopicsOfNamespace" field.</summary>
    public const int GetTopicsOfNamespaceFieldNumber = 32;
    private global::Pulsar.Proto.CommandGetTopicsOfNamespace getTopicsOfNamespace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandGetTopicsOfNamespace GetTopicsOfNamespace {
      get { return getTopicsOfNamespace_; }
      set {
        getTopicsOfNamespace_ = value;
      }
    }

    /// <summary>Field number for the "getTopicsOfNamespaceResponse" field.</summary>
    public const int GetTopicsOfNamespaceResponseFieldNumber = 33;
    private global::Pulsar.Proto.CommandGetTopicsOfNamespaceResponse getTopicsOfNamespaceResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandGetTopicsOfNamespaceResponse GetTopicsOfNamespaceResponse {
      get { return getTopicsOfNamespaceResponse_; }
      set {
        getTopicsOfNamespaceResponse_ = value;
      }
    }

    /// <summary>Field number for the "getSchema" field.</summary>
    public const int GetSchemaFieldNumber = 34;
    private global::Pulsar.Proto.CommandGetSchema getSchema_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandGetSchema GetSchema {
      get { return getSchema_; }
      set {
        getSchema_ = value;
      }
    }

    /// <summary>Field number for the "getSchemaResponse" field.</summary>
    public const int GetSchemaResponseFieldNumber = 35;
    private global::Pulsar.Proto.CommandGetSchemaResponse getSchemaResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pulsar.Proto.CommandGetSchemaResponse GetSchemaResponse {
      get { return getSchemaResponse_; }
      set {
        getSchemaResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BaseCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BaseCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Connect, other.Connect)) return false;
      if (!object.Equals(Connected, other.Connected)) return false;
      if (!object.Equals(Subscribe, other.Subscribe)) return false;
      if (!object.Equals(Producer, other.Producer)) return false;
      if (!object.Equals(Send, other.Send)) return false;
      if (!object.Equals(SendReceipt, other.SendReceipt)) return false;
      if (!object.Equals(SendError, other.SendError)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Ack, other.Ack)) return false;
      if (!object.Equals(Flow, other.Flow)) return false;
      if (!object.Equals(Unsubscribe, other.Unsubscribe)) return false;
      if (!object.Equals(Success, other.Success)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(CloseProducer, other.CloseProducer)) return false;
      if (!object.Equals(CloseConsumer, other.CloseConsumer)) return false;
      if (!object.Equals(ProducerSuccess, other.ProducerSuccess)) return false;
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(Pong, other.Pong)) return false;
      if (!object.Equals(RedeliverUnacknowledgedMessages, other.RedeliverUnacknowledgedMessages)) return false;
      if (!object.Equals(PartitionMetadata, other.PartitionMetadata)) return false;
      if (!object.Equals(PartitionMetadataResponse, other.PartitionMetadataResponse)) return false;
      if (!object.Equals(LookupTopic, other.LookupTopic)) return false;
      if (!object.Equals(LookupTopicResponse, other.LookupTopicResponse)) return false;
      if (!object.Equals(ConsumerStats, other.ConsumerStats)) return false;
      if (!object.Equals(ConsumerStatsResponse, other.ConsumerStatsResponse)) return false;
      if (!object.Equals(ReachedEndOfTopic, other.ReachedEndOfTopic)) return false;
      if (!object.Equals(Seek, other.Seek)) return false;
      if (!object.Equals(GetLastMessageId, other.GetLastMessageId)) return false;
      if (!object.Equals(GetLastMessageIdResponse, other.GetLastMessageIdResponse)) return false;
      if (!object.Equals(ActiveConsumerChange, other.ActiveConsumerChange)) return false;
      if (!object.Equals(GetTopicsOfNamespace, other.GetTopicsOfNamespace)) return false;
      if (!object.Equals(GetTopicsOfNamespaceResponse, other.GetTopicsOfNamespaceResponse)) return false;
      if (!object.Equals(GetSchema, other.GetSchema)) return false;
      if (!object.Equals(GetSchemaResponse, other.GetSchemaResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (connect_ != null) hash ^= Connect.GetHashCode();
      if (connected_ != null) hash ^= Connected.GetHashCode();
      if (subscribe_ != null) hash ^= Subscribe.GetHashCode();
      if (producer_ != null) hash ^= Producer.GetHashCode();
      if (send_ != null) hash ^= Send.GetHashCode();
      if (sendReceipt_ != null) hash ^= SendReceipt.GetHashCode();
      if (sendError_ != null) hash ^= SendError.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (ack_ != null) hash ^= Ack.GetHashCode();
      if (flow_ != null) hash ^= Flow.GetHashCode();
      if (unsubscribe_ != null) hash ^= Unsubscribe.GetHashCode();
      if (success_ != null) hash ^= Success.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (closeProducer_ != null) hash ^= CloseProducer.GetHashCode();
      if (closeConsumer_ != null) hash ^= CloseConsumer.GetHashCode();
      if (producerSuccess_ != null) hash ^= ProducerSuccess.GetHashCode();
      if (ping_ != null) hash ^= Ping.GetHashCode();
      if (pong_ != null) hash ^= Pong.GetHashCode();
      if (redeliverUnacknowledgedMessages_ != null) hash ^= RedeliverUnacknowledgedMessages.GetHashCode();
      if (partitionMetadata_ != null) hash ^= PartitionMetadata.GetHashCode();
      if (partitionMetadataResponse_ != null) hash ^= PartitionMetadataResponse.GetHashCode();
      if (lookupTopic_ != null) hash ^= LookupTopic.GetHashCode();
      if (lookupTopicResponse_ != null) hash ^= LookupTopicResponse.GetHashCode();
      if (consumerStats_ != null) hash ^= ConsumerStats.GetHashCode();
      if (consumerStatsResponse_ != null) hash ^= ConsumerStatsResponse.GetHashCode();
      if (reachedEndOfTopic_ != null) hash ^= ReachedEndOfTopic.GetHashCode();
      if (seek_ != null) hash ^= Seek.GetHashCode();
      if (getLastMessageId_ != null) hash ^= GetLastMessageId.GetHashCode();
      if (getLastMessageIdResponse_ != null) hash ^= GetLastMessageIdResponse.GetHashCode();
      if (activeConsumerChange_ != null) hash ^= ActiveConsumerChange.GetHashCode();
      if (getTopicsOfNamespace_ != null) hash ^= GetTopicsOfNamespace.GetHashCode();
      if (getTopicsOfNamespaceResponse_ != null) hash ^= GetTopicsOfNamespaceResponse.GetHashCode();
      if (getSchema_ != null) hash ^= GetSchema.GetHashCode();
      if (getSchemaResponse_ != null) hash ^= GetSchemaResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (connect_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connect);
      }
      if (connected_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Connected);
      }
      if (subscribe_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Subscribe);
      }
      if (producer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Producer);
      }
      if (send_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Send);
      }
      if (sendReceipt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SendReceipt);
      }
      if (sendError_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SendError);
      }
      if (message_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Message);
      }
      if (ack_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Ack);
      }
      if (flow_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Flow);
      }
      if (unsubscribe_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Unsubscribe);
      }
      if (success_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Success);
      }
      if (error_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Error);
      }
      if (closeProducer_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CloseProducer);
      }
      if (closeConsumer_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CloseConsumer);
      }
      if (producerSuccess_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ProducerSuccess);
      }
      if (ping_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Ping);
      }
      if (pong_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Pong);
      }
      if (redeliverUnacknowledgedMessages_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RedeliverUnacknowledgedMessages);
      }
      if (partitionMetadata_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(PartitionMetadata);
      }
      if (partitionMetadataResponse_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(PartitionMetadataResponse);
      }
      if (lookupTopic_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(LookupTopic);
      }
      if (lookupTopicResponse_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(LookupTopicResponse);
      }
      if (consumerStats_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(ConsumerStats);
      }
      if (consumerStatsResponse_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ConsumerStatsResponse);
      }
      if (reachedEndOfTopic_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(ReachedEndOfTopic);
      }
      if (seek_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Seek);
      }
      if (getLastMessageId_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(GetLastMessageId);
      }
      if (getLastMessageIdResponse_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(GetLastMessageIdResponse);
      }
      if (activeConsumerChange_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(ActiveConsumerChange);
      }
      if (getTopicsOfNamespace_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(GetTopicsOfNamespace);
      }
      if (getTopicsOfNamespaceResponse_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(GetTopicsOfNamespaceResponse);
      }
      if (getSchema_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(GetSchema);
      }
      if (getSchemaResponse_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(GetSchemaResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (connect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connect);
      }
      if (connected_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connected);
      }
      if (subscribe_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscribe);
      }
      if (producer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Producer);
      }
      if (send_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Send);
      }
      if (sendReceipt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendReceipt);
      }
      if (sendError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendError);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (ack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ack);
      }
      if (flow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flow);
      }
      if (unsubscribe_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsubscribe);
      }
      if (success_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (closeProducer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloseProducer);
      }
      if (closeConsumer_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CloseConsumer);
      }
      if (producerSuccess_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProducerSuccess);
      }
      if (ping_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (pong_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Pong);
      }
      if (redeliverUnacknowledgedMessages_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RedeliverUnacknowledgedMessages);
      }
      if (partitionMetadata_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PartitionMetadata);
      }
      if (partitionMetadataResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PartitionMetadataResponse);
      }
      if (lookupTopic_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LookupTopic);
      }
      if (lookupTopicResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LookupTopicResponse);
      }
      if (consumerStats_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConsumerStats);
      }
      if (consumerStatsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConsumerStatsResponse);
      }
      if (reachedEndOfTopic_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReachedEndOfTopic);
      }
      if (seek_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Seek);
      }
      if (getLastMessageId_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetLastMessageId);
      }
      if (getLastMessageIdResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetLastMessageIdResponse);
      }
      if (activeConsumerChange_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ActiveConsumerChange);
      }
      if (getTopicsOfNamespace_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetTopicsOfNamespace);
      }
      if (getTopicsOfNamespaceResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetTopicsOfNamespaceResponse);
      }
      if (getSchema_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSchema);
      }
      if (getSchemaResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSchemaResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BaseCommand other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.connect_ != null) {
        if (connect_ == null) {
          connect_ = new global::Pulsar.Proto.CommandConnect();
        }
        Connect.MergeFrom(other.Connect);
      }
      if (other.connected_ != null) {
        if (connected_ == null) {
          connected_ = new global::Pulsar.Proto.CommandConnected();
        }
        Connected.MergeFrom(other.Connected);
      }
      if (other.subscribe_ != null) {
        if (subscribe_ == null) {
          subscribe_ = new global::Pulsar.Proto.CommandSubscribe();
        }
        Subscribe.MergeFrom(other.Subscribe);
      }
      if (other.producer_ != null) {
        if (producer_ == null) {
          producer_ = new global::Pulsar.Proto.CommandProducer();
        }
        Producer.MergeFrom(other.Producer);
      }
      if (other.send_ != null) {
        if (send_ == null) {
          send_ = new global::Pulsar.Proto.CommandSend();
        }
        Send.MergeFrom(other.Send);
      }
      if (other.sendReceipt_ != null) {
        if (sendReceipt_ == null) {
          sendReceipt_ = new global::Pulsar.Proto.CommandSendReceipt();
        }
        SendReceipt.MergeFrom(other.SendReceipt);
      }
      if (other.sendError_ != null) {
        if (sendError_ == null) {
          sendError_ = new global::Pulsar.Proto.CommandSendError();
        }
        SendError.MergeFrom(other.SendError);
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::Pulsar.Proto.CommandMessage();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.ack_ != null) {
        if (ack_ == null) {
          ack_ = new global::Pulsar.Proto.CommandAck();
        }
        Ack.MergeFrom(other.Ack);
      }
      if (other.flow_ != null) {
        if (flow_ == null) {
          flow_ = new global::Pulsar.Proto.CommandFlow();
        }
        Flow.MergeFrom(other.Flow);
      }
      if (other.unsubscribe_ != null) {
        if (unsubscribe_ == null) {
          unsubscribe_ = new global::Pulsar.Proto.CommandUnsubscribe();
        }
        Unsubscribe.MergeFrom(other.Unsubscribe);
      }
      if (other.success_ != null) {
        if (success_ == null) {
          success_ = new global::Pulsar.Proto.CommandSuccess();
        }
        Success.MergeFrom(other.Success);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Pulsar.Proto.CommandError();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.closeProducer_ != null) {
        if (closeProducer_ == null) {
          closeProducer_ = new global::Pulsar.Proto.CommandCloseProducer();
        }
        CloseProducer.MergeFrom(other.CloseProducer);
      }
      if (other.closeConsumer_ != null) {
        if (closeConsumer_ == null) {
          closeConsumer_ = new global::Pulsar.Proto.CommandCloseConsumer();
        }
        CloseConsumer.MergeFrom(other.CloseConsumer);
      }
      if (other.producerSuccess_ != null) {
        if (producerSuccess_ == null) {
          producerSuccess_ = new global::Pulsar.Proto.CommandProducerSuccess();
        }
        ProducerSuccess.MergeFrom(other.ProducerSuccess);
      }
      if (other.ping_ != null) {
        if (ping_ == null) {
          ping_ = new global::Pulsar.Proto.CommandPing();
        }
        Ping.MergeFrom(other.Ping);
      }
      if (other.pong_ != null) {
        if (pong_ == null) {
          pong_ = new global::Pulsar.Proto.CommandPong();
        }
        Pong.MergeFrom(other.Pong);
      }
      if (other.redeliverUnacknowledgedMessages_ != null) {
        if (redeliverUnacknowledgedMessages_ == null) {
          redeliverUnacknowledgedMessages_ = new global::Pulsar.Proto.CommandRedeliverUnacknowledgedMessages();
        }
        RedeliverUnacknowledgedMessages.MergeFrom(other.RedeliverUnacknowledgedMessages);
      }
      if (other.partitionMetadata_ != null) {
        if (partitionMetadata_ == null) {
          partitionMetadata_ = new global::Pulsar.Proto.CommandPartitionedTopicMetadata();
        }
        PartitionMetadata.MergeFrom(other.PartitionMetadata);
      }
      if (other.partitionMetadataResponse_ != null) {
        if (partitionMetadataResponse_ == null) {
          partitionMetadataResponse_ = new global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse();
        }
        PartitionMetadataResponse.MergeFrom(other.PartitionMetadataResponse);
      }
      if (other.lookupTopic_ != null) {
        if (lookupTopic_ == null) {
          lookupTopic_ = new global::Pulsar.Proto.CommandLookupTopic();
        }
        LookupTopic.MergeFrom(other.LookupTopic);
      }
      if (other.lookupTopicResponse_ != null) {
        if (lookupTopicResponse_ == null) {
          lookupTopicResponse_ = new global::Pulsar.Proto.CommandLookupTopicResponse();
        }
        LookupTopicResponse.MergeFrom(other.LookupTopicResponse);
      }
      if (other.consumerStats_ != null) {
        if (consumerStats_ == null) {
          consumerStats_ = new global::Pulsar.Proto.CommandConsumerStats();
        }
        ConsumerStats.MergeFrom(other.ConsumerStats);
      }
      if (other.consumerStatsResponse_ != null) {
        if (consumerStatsResponse_ == null) {
          consumerStatsResponse_ = new global::Pulsar.Proto.CommandConsumerStatsResponse();
        }
        ConsumerStatsResponse.MergeFrom(other.ConsumerStatsResponse);
      }
      if (other.reachedEndOfTopic_ != null) {
        if (reachedEndOfTopic_ == null) {
          reachedEndOfTopic_ = new global::Pulsar.Proto.CommandReachedEndOfTopic();
        }
        ReachedEndOfTopic.MergeFrom(other.ReachedEndOfTopic);
      }
      if (other.seek_ != null) {
        if (seek_ == null) {
          seek_ = new global::Pulsar.Proto.CommandSeek();
        }
        Seek.MergeFrom(other.Seek);
      }
      if (other.getLastMessageId_ != null) {
        if (getLastMessageId_ == null) {
          getLastMessageId_ = new global::Pulsar.Proto.CommandGetLastMessageId();
        }
        GetLastMessageId.MergeFrom(other.GetLastMessageId);
      }
      if (other.getLastMessageIdResponse_ != null) {
        if (getLastMessageIdResponse_ == null) {
          getLastMessageIdResponse_ = new global::Pulsar.Proto.CommandGetLastMessageIdResponse();
        }
        GetLastMessageIdResponse.MergeFrom(other.GetLastMessageIdResponse);
      }
      if (other.activeConsumerChange_ != null) {
        if (activeConsumerChange_ == null) {
          activeConsumerChange_ = new global::Pulsar.Proto.CommandActiveConsumerChange();
        }
        ActiveConsumerChange.MergeFrom(other.ActiveConsumerChange);
      }
      if (other.getTopicsOfNamespace_ != null) {
        if (getTopicsOfNamespace_ == null) {
          getTopicsOfNamespace_ = new global::Pulsar.Proto.CommandGetTopicsOfNamespace();
        }
        GetTopicsOfNamespace.MergeFrom(other.GetTopicsOfNamespace);
      }
      if (other.getTopicsOfNamespaceResponse_ != null) {
        if (getTopicsOfNamespaceResponse_ == null) {
          getTopicsOfNamespaceResponse_ = new global::Pulsar.Proto.CommandGetTopicsOfNamespaceResponse();
        }
        GetTopicsOfNamespaceResponse.MergeFrom(other.GetTopicsOfNamespaceResponse);
      }
      if (other.getSchema_ != null) {
        if (getSchema_ == null) {
          getSchema_ = new global::Pulsar.Proto.CommandGetSchema();
        }
        GetSchema.MergeFrom(other.GetSchema);
      }
      if (other.getSchemaResponse_ != null) {
        if (getSchemaResponse_ == null) {
          getSchemaResponse_ = new global::Pulsar.Proto.CommandGetSchemaResponse();
        }
        GetSchemaResponse.MergeFrom(other.GetSchemaResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Pulsar.Proto.BaseCommand.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (connect_ == null) {
              connect_ = new global::Pulsar.Proto.CommandConnect();
            }
            input.ReadMessage(connect_);
            break;
          }
          case 26: {
            if (connected_ == null) {
              connected_ = new global::Pulsar.Proto.CommandConnected();
            }
            input.ReadMessage(connected_);
            break;
          }
          case 34: {
            if (subscribe_ == null) {
              subscribe_ = new global::Pulsar.Proto.CommandSubscribe();
            }
            input.ReadMessage(subscribe_);
            break;
          }
          case 42: {
            if (producer_ == null) {
              producer_ = new global::Pulsar.Proto.CommandProducer();
            }
            input.ReadMessage(producer_);
            break;
          }
          case 50: {
            if (send_ == null) {
              send_ = new global::Pulsar.Proto.CommandSend();
            }
            input.ReadMessage(send_);
            break;
          }
          case 58: {
            if (sendReceipt_ == null) {
              sendReceipt_ = new global::Pulsar.Proto.CommandSendReceipt();
            }
            input.ReadMessage(sendReceipt_);
            break;
          }
          case 66: {
            if (sendError_ == null) {
              sendError_ = new global::Pulsar.Proto.CommandSendError();
            }
            input.ReadMessage(sendError_);
            break;
          }
          case 74: {
            if (message_ == null) {
              message_ = new global::Pulsar.Proto.CommandMessage();
            }
            input.ReadMessage(message_);
            break;
          }
          case 82: {
            if (ack_ == null) {
              ack_ = new global::Pulsar.Proto.CommandAck();
            }
            input.ReadMessage(ack_);
            break;
          }
          case 90: {
            if (flow_ == null) {
              flow_ = new global::Pulsar.Proto.CommandFlow();
            }
            input.ReadMessage(flow_);
            break;
          }
          case 98: {
            if (unsubscribe_ == null) {
              unsubscribe_ = new global::Pulsar.Proto.CommandUnsubscribe();
            }
            input.ReadMessage(unsubscribe_);
            break;
          }
          case 106: {
            if (success_ == null) {
              success_ = new global::Pulsar.Proto.CommandSuccess();
            }
            input.ReadMessage(success_);
            break;
          }
          case 114: {
            if (error_ == null) {
              error_ = new global::Pulsar.Proto.CommandError();
            }
            input.ReadMessage(error_);
            break;
          }
          case 122: {
            if (closeProducer_ == null) {
              closeProducer_ = new global::Pulsar.Proto.CommandCloseProducer();
            }
            input.ReadMessage(closeProducer_);
            break;
          }
          case 130: {
            if (closeConsumer_ == null) {
              closeConsumer_ = new global::Pulsar.Proto.CommandCloseConsumer();
            }
            input.ReadMessage(closeConsumer_);
            break;
          }
          case 138: {
            if (producerSuccess_ == null) {
              producerSuccess_ = new global::Pulsar.Proto.CommandProducerSuccess();
            }
            input.ReadMessage(producerSuccess_);
            break;
          }
          case 146: {
            if (ping_ == null) {
              ping_ = new global::Pulsar.Proto.CommandPing();
            }
            input.ReadMessage(ping_);
            break;
          }
          case 154: {
            if (pong_ == null) {
              pong_ = new global::Pulsar.Proto.CommandPong();
            }
            input.ReadMessage(pong_);
            break;
          }
          case 162: {
            if (redeliverUnacknowledgedMessages_ == null) {
              redeliverUnacknowledgedMessages_ = new global::Pulsar.Proto.CommandRedeliverUnacknowledgedMessages();
            }
            input.ReadMessage(redeliverUnacknowledgedMessages_);
            break;
          }
          case 170: {
            if (partitionMetadata_ == null) {
              partitionMetadata_ = new global::Pulsar.Proto.CommandPartitionedTopicMetadata();
            }
            input.ReadMessage(partitionMetadata_);
            break;
          }
          case 178: {
            if (partitionMetadataResponse_ == null) {
              partitionMetadataResponse_ = new global::Pulsar.Proto.CommandPartitionedTopicMetadataResponse();
            }
            input.ReadMessage(partitionMetadataResponse_);
            break;
          }
          case 186: {
            if (lookupTopic_ == null) {
              lookupTopic_ = new global::Pulsar.Proto.CommandLookupTopic();
            }
            input.ReadMessage(lookupTopic_);
            break;
          }
          case 194: {
            if (lookupTopicResponse_ == null) {
              lookupTopicResponse_ = new global::Pulsar.Proto.CommandLookupTopicResponse();
            }
            input.ReadMessage(lookupTopicResponse_);
            break;
          }
          case 202: {
            if (consumerStats_ == null) {
              consumerStats_ = new global::Pulsar.Proto.CommandConsumerStats();
            }
            input.ReadMessage(consumerStats_);
            break;
          }
          case 210: {
            if (consumerStatsResponse_ == null) {
              consumerStatsResponse_ = new global::Pulsar.Proto.CommandConsumerStatsResponse();
            }
            input.ReadMessage(consumerStatsResponse_);
            break;
          }
          case 218: {
            if (reachedEndOfTopic_ == null) {
              reachedEndOfTopic_ = new global::Pulsar.Proto.CommandReachedEndOfTopic();
            }
            input.ReadMessage(reachedEndOfTopic_);
            break;
          }
          case 226: {
            if (seek_ == null) {
              seek_ = new global::Pulsar.Proto.CommandSeek();
            }
            input.ReadMessage(seek_);
            break;
          }
          case 234: {
            if (getLastMessageId_ == null) {
              getLastMessageId_ = new global::Pulsar.Proto.CommandGetLastMessageId();
            }
            input.ReadMessage(getLastMessageId_);
            break;
          }
          case 242: {
            if (getLastMessageIdResponse_ == null) {
              getLastMessageIdResponse_ = new global::Pulsar.Proto.CommandGetLastMessageIdResponse();
            }
            input.ReadMessage(getLastMessageIdResponse_);
            break;
          }
          case 250: {
            if (activeConsumerChange_ == null) {
              activeConsumerChange_ = new global::Pulsar.Proto.CommandActiveConsumerChange();
            }
            input.ReadMessage(activeConsumerChange_);
            break;
          }
          case 258: {
            if (getTopicsOfNamespace_ == null) {
              getTopicsOfNamespace_ = new global::Pulsar.Proto.CommandGetTopicsOfNamespace();
            }
            input.ReadMessage(getTopicsOfNamespace_);
            break;
          }
          case 266: {
            if (getTopicsOfNamespaceResponse_ == null) {
              getTopicsOfNamespaceResponse_ = new global::Pulsar.Proto.CommandGetTopicsOfNamespaceResponse();
            }
            input.ReadMessage(getTopicsOfNamespaceResponse_);
            break;
          }
          case 274: {
            if (getSchema_ == null) {
              getSchema_ = new global::Pulsar.Proto.CommandGetSchema();
            }
            input.ReadMessage(getSchema_);
            break;
          }
          case 282: {
            if (getSchemaResponse_ == null) {
              getSchemaResponse_ = new global::Pulsar.Proto.CommandGetSchemaResponse();
            }
            input.ReadMessage(getSchemaResponse_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BaseCommand message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("CONNECT")] Connect = 2,
        [pbr::OriginalName("CONNECTED")] Connected = 3,
        [pbr::OriginalName("SUBSCRIBE")] Subscribe = 4,
        [pbr::OriginalName("PRODUCER")] Producer = 5,
        [pbr::OriginalName("SEND")] Send = 6,
        [pbr::OriginalName("SEND_RECEIPT")] SendReceipt = 7,
        [pbr::OriginalName("SEND_ERROR")] SendError = 8,
        [pbr::OriginalName("MESSAGE")] Message = 9,
        [pbr::OriginalName("ACK")] Ack = 10,
        [pbr::OriginalName("FLOW")] Flow = 11,
        [pbr::OriginalName("UNSUBSCRIBE")] Unsubscribe = 12,
        [pbr::OriginalName("SUCCESS")] Success = 13,
        [pbr::OriginalName("ERROR")] Error = 14,
        [pbr::OriginalName("CLOSE_PRODUCER")] CloseProducer = 15,
        [pbr::OriginalName("CLOSE_CONSUMER")] CloseConsumer = 16,
        [pbr::OriginalName("PRODUCER_SUCCESS")] ProducerSuccess = 17,
        [pbr::OriginalName("PING")] Ping = 18,
        [pbr::OriginalName("PONG")] Pong = 19,
        [pbr::OriginalName("REDELIVER_UNACKNOWLEDGED_MESSAGES")] RedeliverUnacknowledgedMessages = 20,
        [pbr::OriginalName("PARTITIONED_METADATA")] PartitionedMetadata = 21,
        [pbr::OriginalName("PARTITIONED_METADATA_RESPONSE")] PartitionedMetadataResponse = 22,
        [pbr::OriginalName("LOOKUP")] Lookup = 23,
        [pbr::OriginalName("LOOKUP_RESPONSE")] LookupResponse = 24,
        [pbr::OriginalName("CONSUMER_STATS")] ConsumerStats = 25,
        [pbr::OriginalName("CONSUMER_STATS_RESPONSE")] ConsumerStatsResponse = 26,
        [pbr::OriginalName("REACHED_END_OF_TOPIC")] ReachedEndOfTopic = 27,
        [pbr::OriginalName("SEEK")] Seek = 28,
        [pbr::OriginalName("GET_LAST_MESSAGE_ID")] GetLastMessageId = 29,
        [pbr::OriginalName("GET_LAST_MESSAGE_ID_RESPONSE")] GetLastMessageIdResponse = 30,
        [pbr::OriginalName("ACTIVE_CONSUMER_CHANGE")] ActiveConsumerChange = 31,
        [pbr::OriginalName("GET_TOPICS_OF_NAMESPACE")] GetTopicsOfNamespace = 32,
        [pbr::OriginalName("GET_TOPICS_OF_NAMESPACE_RESPONSE")] GetTopicsOfNamespaceResponse = 33,
        [pbr::OriginalName("GET_SCHEMA")] GetSchema = 34,
        [pbr::OriginalName("GET_SCHEMA_RESPONSE")] GetSchemaResponse = 35,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
